{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursor\\\\Defisite\\\\src\\\\components\\\\TokenExchange.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { ethers } from 'ethers';\nimport { SEPOLIA_CHAIN_ID, CONTRACT_ADDRESS, CONTRACT_ABI } from '../App';\nimport './TokenExchange.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ERC20_ABI = [{\n  constant: true,\n  inputs: [{\n    name: \"_owner\",\n    type: \"address\"\n  }],\n  name: \"balanceOf\",\n  outputs: [{\n    name: \"balance\",\n    type: \"uint256\"\n  }],\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [{\n    name: \"_spender\",\n    type: \"address\"\n  }, {\n    name: \"_value\",\n    type: \"uint256\"\n  }],\n  name: \"approve\",\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }],\n  type: \"function\"\n}, {\n  constant: true,\n  inputs: [{\n    name: \"_owner\",\n    type: \"address\"\n  }, {\n    name: \"_spender\",\n    type: \"address\"\n  }],\n  name: \"allowance\",\n  outputs: [{\n    name: \"remaining\",\n    type: \"uint256\"\n  }],\n  type: \"function\"\n}];\nconst TOKENS = {\n  ETH: {\n    symbol: 'ETH',\n    name: 'Ethereum',\n    decimals: 18,\n    price: 1000\n  },\n  gUSDC: {\n    symbol: 'gUSDC',\n    name: 'gUSDC',\n    address: '0x37B118a528AAD5a22259AFfa21c34254fDa2B60c',\n    decimals: 18,\n    price: 1\n  },\n  gUSDT: {\n    symbol: 'gUSDT',\n    name: 'gUSDT',\n    address: '0xeB06441f880F5948e80Ae62042687b4dE22124f2',\n    decimals: 18,\n    price: 1\n  },\n  gKIP: {\n    symbol: 'gKIP',\n    name: 'gKIP',\n    address: '0x4B5bA223e2f5e4c746C5F714fAD6D641Ef195a5B',\n    decimals: 18,\n    price: 0.00012\n  }\n};\nfunction TokenExchange({\n  checkAndSwitchNetwork,\n  switchToSepolia\n}) {\n  _s();\n  const {\n    active,\n    library,\n    account,\n    chainId\n  } = useWeb3React();\n  const [inputToken, setInputToken] = useState('ETH');\n  const [outputToken, setOutputToken] = useState('gKIP');\n  const [inputAmount, setInputAmount] = useState('0');\n  const [outputAmount, setOutputAmount] = useState('');\n  const [balances, setBalances] = useState({});\n  const [error, setError] = useState('');\n  const [isExchanging, setIsExchanging] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [transactions, setTransactions] = useState([]);\n  const updateBalances = useCallback(async () => {\n    if (!active || !library || !account) return;\n    const newBalances = {};\n    for (const [symbol, token] of Object.entries(TOKENS)) {\n      if (symbol === 'ETH') {\n        const balance = await library.getBalance(account);\n        newBalances[symbol] = ethers.utils.formatEther(balance);\n      } else {\n        try {\n          const tokenContract = new ethers.Contract(token.address, ERC20_ABI, library.getSigner());\n          const balance = await tokenContract.balanceOf(account);\n          newBalances[symbol] = ethers.utils.formatUnits(balance, token.decimals);\n        } catch (error) {\n          console.error(`Error fetching balance for ${symbol}:`, error);\n          newBalances[symbol] = '0';\n        }\n      }\n    }\n    setBalances(newBalances);\n  }, [active, library, account]);\n  useEffect(() => {\n    if (active && library) {\n      const init = async () => {\n        const result = await checkAndSwitchNetwork();\n        if (result) {\n          await updateBalances();\n        } else {\n          console.warn('Failed to switch network');\n        }\n      };\n      init();\n    }\n  }, [active, library, checkAndSwitchNetwork, updateBalances]);\n  useEffect(() => {\n    calculateOutputAmount();\n  }, [inputAmount, inputToken, outputToken]);\n  const calculateOutputAmount = () => {\n    if (!inputAmount || !TOKENS[inputToken] || !TOKENS[outputToken]) {\n      setOutputAmount('0.0000');\n      return;\n    }\n    const inputValue = parseFloat(inputAmount);\n    let outputAmount;\n    if (inputToken === 'ETH') {\n      if (outputToken === 'gUSDC' || outputToken === 'gUSDT') {\n        outputAmount = inputValue;\n      } else if (outputToken === 'gKIP') {\n        outputAmount = inputValue / 0.001 * 8.333333333;\n      }\n    } else if (outputToken === 'ETH') {\n      if (inputToken === 'gUSDC' || inputToken === 'gUSDT') {\n        outputAmount = inputValue;\n      } else if (inputToken === 'gKIP') {\n        outputAmount = inputValue / 8.333333333 * 0.001;\n      }\n    } else {\n      let ethValue;\n      if (inputToken === 'gUSDC' || inputToken === 'gUSDT') {\n        ethValue = inputValue;\n      } else if (inputToken === 'gKIP') {\n        ethValue = inputValue / 8.333333333 * 0.001;\n      }\n      if (outputToken === 'gUSDC' || outputToken === 'gUSDT') {\n        outputAmount = ethValue;\n      } else if (outputToken === 'gKIP') {\n        outputAmount = ethValue / 0.001 * 8.333333333;\n      }\n    }\n    console.log('Calculation:', {\n      inputAmount,\n      inputToken,\n      outputToken,\n      outputAmount\n    });\n    setOutputAmount(outputAmount.toFixed(6));\n  };\n  const handleInputTokenChange = e => {\n    const newInputToken = e.target.value;\n    setInputToken(newInputToken);\n    if (newInputToken === outputToken) {\n      const newOutputToken = Object.keys(TOKENS).find(token => token !== newInputToken);\n      setOutputToken(newOutputToken);\n    }\n    setInputAmount('0');\n    setOutputAmount('0.0000');\n  };\n  const handleOutputTokenChange = e => {\n    const newOutputToken = e.target.value;\n    setOutputToken(newOutputToken);\n    if (newOutputToken === inputToken) {\n      const newInputToken = Object.keys(TOKENS).find(token => token !== newOutputToken);\n      setInputToken(newInputToken);\n    }\n    setInputAmount('0');\n    setOutputAmount('0.0000');\n  };\n  const handleExchange = async () => {\n    if (!(await checkAndSwitchNetwork())) {\n      setErrorMessage('Please switch to the Sepolia network to proceed.');\n      return;\n    }\n    if (!active || !library) {\n      setErrorMessage('Please connect your wallet first');\n      return;\n    }\n    if (parseFloat(inputAmount) > parseFloat(balances[inputToken])) {\n      setErrorMessage(`Insufficient ${inputToken} balance`);\n      return;\n    }\n    setErrorMessage('');\n    setIsLoading(true);\n    setIsExchanging(true);\n    try {\n      const signer = library.getSigner();\n      const contract = new ethers.Contract(CONTRACT_ADDRESS, CONTRACT_ABI, signer);\n      let tx;\n      const gasLimit = ethers.utils.hexlify(300000);\n      if (inputToken === 'ETH') {\n        tx = await contract.exchangeETHForToken(TOKENS[outputToken].address, {\n          value: ethers.utils.parseEther(inputAmount),\n          gasLimit: gasLimit\n        });\n      } else if (outputToken === 'ETH') {\n        const tokenContract = new ethers.Contract(TOKENS[inputToken].address, ERC20_ABI, signer);\n        const amount = ethers.utils.parseUnits(inputAmount, TOKENS[inputToken].decimals);\n        await approveToken(tokenContract, amount);\n        tx = await contract.exchangeTokenForETH(TOKENS[inputToken].address, amount, {\n          gasLimit: gasLimit\n        });\n      } else {\n        const tokenContract = new ethers.Contract(TOKENS[inputToken].address, ERC20_ABI, signer);\n        const amount = ethers.utils.parseUnits(inputAmount, TOKENS[inputToken].decimals);\n        await approveToken(tokenContract, amount);\n        tx = await contract.exchangeTokens(TOKENS[inputToken].address, TOKENS[outputToken].address, amount, {\n          gasLimit: gasLimit\n        });\n      }\n      const receipt = await tx.wait();\n      console.log('Transaction confirmed:', receipt.transactionHash);\n      setTransactions(prev => [{\n        hash: receipt.transactionHash,\n        from: inputToken,\n        to: outputToken,\n        amount: inputAmount\n      }, ...prev.slice(0, 4)]);\n      alert('Exchange successful!');\n      await updateBalances();\n    } catch (error) {\n      console.error('Exchange failed:', error);\n      handleError(error);\n    } finally {\n      setIsLoading(false);\n      setIsExchanging(false);\n    }\n  };\n  const approveToken = async (tokenContract, amount) => {\n    const allowance = await tokenContract.allowance(await tokenContract.signer.getAddress(), CONTRACT_ADDRESS);\n    if (allowance.lt(amount)) {\n      const approveTx = await tokenContract.approve(CONTRACT_ADDRESS, amount);\n      await approveTx.wait();\n    }\n  };\n  const handleError = error => {\n    if (error.code === 4001) {\n      setErrorMessage('Transaction was rejected. Please try again.');\n    } else if (error.message.includes('insufficient funds')) {\n      setErrorMessage('Insufficient funds for this transaction. Please check your balance.');\n    } else if (error.message.includes('gas required exceeds allowance')) {\n      setErrorMessage('Transaction may fail. Try increasing gas limit.');\n    } else {\n      setErrorMessage(`Exchange failed: ${error.message}`);\n    }\n  };\n  const setMaxAmount = () => {\n    if (inputToken === 'ETH') {\n      const maxAmount = parseFloat(balances[inputToken]) - 0.01;\n      setInputAmount(maxAmount > 0 ? maxAmount.toString() : '0');\n    } else {\n      setInputAmount(balances[inputToken]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exchange-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Swap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"swap-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"token-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"token-select\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: inputToken,\n            onChange: handleInputTokenChange,\n            children: Object.keys(TOKENS).map(token => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: token,\n              children: TOKENS[token].name\n            }, token, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: inputAmount,\n          onChange: e => {\n            setInputAmount(e.target.value === '' ? '0' : e.target.value);\n            setError('');\n          },\n          placeholder: \"0.0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: setMaxAmount,\n          className: \"max-button\",\n          children: \"MAX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"balance\",\n        children: [\"Balance: \", active ? parseFloat(balances[inputToken]).toFixed(4) : '0.0000', \" \", inputToken]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"swap-icon\",\n        children: \"\\u2193\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"token-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"token-select\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: outputToken,\n            onChange: handleOutputTokenChange,\n            children: Object.keys(TOKENS).filter(token => token !== inputToken).map(token => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: token,\n              children: TOKENS[token].name\n            }, token, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: outputAmount || '0.0000',\n          readOnly: true,\n          placeholder: \"0.0000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleExchange,\n      disabled: !active || !inputAmount || parseFloat(inputAmount) > parseFloat(balances[inputToken]) || isExchanging,\n      className: \"swap-button\",\n      children: isLoading ? 'Processing...' : 'Swap'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recent Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), transactions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No recent transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: transactions.map((tx, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [tx.from, \" to \", tx.to, \": \", tx.amount, /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://sepolia.etherscan.io/tx/${tx.hash}`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n}\n_s(TokenExchange, \"YCXgCscl6/DnRDnI1ReRKlJ60Wk=\", false, function () {\n  return [useWeb3React];\n});\n_c = TokenExchange;\nexport default TokenExchange;\nvar _c;\n$RefreshReg$(_c, \"TokenExchange\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useWeb3React","ethers","SEPOLIA_CHAIN_ID","CONTRACT_ADDRESS","CONTRACT_ABI","jsxDEV","_jsxDEV","ERC20_ABI","constant","inputs","name","type","outputs","TOKENS","ETH","symbol","decimals","price","gUSDC","address","gUSDT","gKIP","TokenExchange","checkAndSwitchNetwork","switchToSepolia","_s","active","library","account","chainId","inputToken","setInputToken","outputToken","setOutputToken","inputAmount","setInputAmount","outputAmount","setOutputAmount","balances","setBalances","error","setError","isExchanging","setIsExchanging","errorMessage","setErrorMessage","isLoading","setIsLoading","transactions","setTransactions","updateBalances","newBalances","token","Object","entries","balance","getBalance","utils","formatEther","tokenContract","Contract","getSigner","balanceOf","formatUnits","console","init","result","warn","calculateOutputAmount","inputValue","parseFloat","ethValue","log","toFixed","handleInputTokenChange","e","newInputToken","target","value","newOutputToken","keys","find","handleOutputTokenChange","handleExchange","signer","contract","tx","gasLimit","hexlify","exchangeETHForToken","parseEther","amount","parseUnits","approveToken","exchangeTokenForETH","exchangeTokens","receipt","wait","transactionHash","prev","hash","from","to","slice","alert","handleError","allowance","getAddress","lt","approveTx","approve","code","message","includes","setMaxAmount","maxAmount","toString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","placeholder","onClick","filter","readOnly","disabled","length","index","href","rel","_c","$RefreshReg$"],"sources":["C:/Cursor/Defisite/src/components/TokenExchange.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { ethers } from 'ethers';\r\nimport { SEPOLIA_CHAIN_ID, CONTRACT_ADDRESS, CONTRACT_ABI } from '../App';\r\nimport './TokenExchange.css';\r\n\r\nconst ERC20_ABI = [\r\n  {\r\n    constant: true,\r\n    inputs: [{ name: \"_owner\", type: \"address\" }],\r\n    name: \"balanceOf\",\r\n    outputs: [{ name: \"balance\", type: \"uint256\" }],\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { name: \"_spender\", type: \"address\" },\r\n      { name: \"_value\", type: \"uint256\" }\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [{ name: \"\", type: \"bool\" }],\r\n    type: \"function\"\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      { name: \"_owner\", type: \"address\" },\r\n      { name: \"_spender\", type: \"address\" }\r\n    ],\r\n    name: \"allowance\",\r\n    outputs: [{ name: \"remaining\", type: \"uint256\" }],\r\n    type: \"function\"\r\n  },\r\n];\r\n\r\nconst TOKENS = {\r\n  ETH: { symbol: 'ETH', name: 'Ethereum', decimals: 18, price: 1000 },\r\n  gUSDC: { symbol: 'gUSDC', name: 'gUSDC', address: '0x37B118a528AAD5a22259AFfa21c34254fDa2B60c', decimals: 18, price: 1 },\r\n  gUSDT: { symbol: 'gUSDT', name: 'gUSDT', address: '0xeB06441f880F5948e80Ae62042687b4dE22124f2', decimals: 18, price: 1 },\r\n  gKIP: { symbol: 'gKIP', name: 'gKIP', address: '0x4B5bA223e2f5e4c746C5F714fAD6D641Ef195a5B', decimals: 18, price: 0.00012 },\r\n};\r\n\r\nfunction TokenExchange({ checkAndSwitchNetwork, switchToSepolia }) {\r\n  const { active, library, account, chainId } = useWeb3React();\r\n  const [inputToken, setInputToken] = useState('ETH');\r\n  const [outputToken, setOutputToken] = useState('gKIP');\r\n  const [inputAmount, setInputAmount] = useState('0');\r\n  const [outputAmount, setOutputAmount] = useState('');\r\n  const [balances, setBalances] = useState({});\r\n  const [error, setError] = useState('');\r\n  const [isExchanging, setIsExchanging] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [transactions, setTransactions] = useState([]);\r\n\r\n  const updateBalances = useCallback(async () => {\r\n    if (!active || !library || !account) return;\r\n\r\n    const newBalances = {};\r\n    for (const [symbol, token] of Object.entries(TOKENS)) {\r\n      if (symbol === 'ETH') {\r\n        const balance = await library.getBalance(account);\r\n        newBalances[symbol] = ethers.utils.formatEther(balance);\r\n      } else {\r\n        try {\r\n          const tokenContract = new ethers.Contract(token.address, ERC20_ABI, library.getSigner());\r\n          const balance = await tokenContract.balanceOf(account);\r\n          newBalances[symbol] = ethers.utils.formatUnits(balance, token.decimals);\r\n        } catch (error) {\r\n          console.error(`Error fetching balance for ${symbol}:`, error);\r\n          newBalances[symbol] = '0';\r\n        }\r\n      }\r\n    }\r\n    setBalances(newBalances);\r\n  }, [active, library, account]);\r\n\r\n  useEffect(() => {\r\n    if (active && library) {\r\n      const init = async () => {\r\n        const result = await checkAndSwitchNetwork();\r\n        if (result) {\r\n          await updateBalances();\r\n        } else {\r\n          console.warn('Failed to switch network');\r\n        }\r\n      };\r\n      init();\r\n    }\r\n  }, [active, library, checkAndSwitchNetwork, updateBalances]);\r\n\r\n  useEffect(() => {\r\n    calculateOutputAmount();\r\n  }, [inputAmount, inputToken, outputToken]);\r\n\r\n  const calculateOutputAmount = () => {\r\n    if (!inputAmount || !TOKENS[inputToken] || !TOKENS[outputToken]) {\r\n      setOutputAmount('0.0000');\r\n      return;\r\n    }\r\n    \r\n    const inputValue = parseFloat(inputAmount);\r\n    let outputAmount;\r\n\r\n    if (inputToken === 'ETH') {\r\n      if (outputToken === 'gUSDC' || outputToken === 'gUSDT') {\r\n        outputAmount = inputValue;\r\n      } else if (outputToken === 'gKIP') {\r\n        outputAmount = (inputValue / 0.001) * 8.333333333;\r\n      }\r\n    } else if (outputToken === 'ETH') {\r\n      if (inputToken === 'gUSDC' || inputToken === 'gUSDT') {\r\n        outputAmount = inputValue;\r\n      } else if (inputToken === 'gKIP') {\r\n        outputAmount = (inputValue / 8.333333333) * 0.001;\r\n      }\r\n    } else {\r\n      let ethValue;\r\n      if (inputToken === 'gUSDC' || inputToken === 'gUSDT') {\r\n        ethValue = inputValue;\r\n      } else if (inputToken === 'gKIP') {\r\n        ethValue = (inputValue / 8.333333333) * 0.001;\r\n      }\r\n\r\n      if (outputToken === 'gUSDC' || outputToken === 'gUSDT') {\r\n        outputAmount = ethValue;\r\n      } else if (outputToken === 'gKIP') {\r\n        outputAmount = (ethValue / 0.001) * 8.333333333;\r\n      }\r\n    }\r\n\r\n    console.log('Calculation:', { \r\n      inputAmount,\r\n      inputToken,\r\n      outputToken,\r\n      outputAmount\r\n    });\r\n    \r\n    setOutputAmount(outputAmount.toFixed(6));\r\n  };\r\n\r\n  const handleInputTokenChange = (e) => {\r\n    const newInputToken = e.target.value;\r\n    setInputToken(newInputToken);\r\n    \r\n    if (newInputToken === outputToken) {\r\n      const newOutputToken = Object.keys(TOKENS).find(token => token !== newInputToken);\r\n      setOutputToken(newOutputToken);\r\n    }\r\n\r\n    setInputAmount('0');\r\n    setOutputAmount('0.0000');\r\n  };\r\n\r\n  const handleOutputTokenChange = (e) => {\r\n    const newOutputToken = e.target.value;\r\n    setOutputToken(newOutputToken);\r\n    \r\n    if (newOutputToken === inputToken) {\r\n      const newInputToken = Object.keys(TOKENS).find(token => token !== newOutputToken);\r\n      setInputToken(newInputToken);\r\n    }\r\n\r\n    setInputAmount('0');\r\n    setOutputAmount('0.0000');\r\n  };\r\n\r\n  const handleExchange = async () => {\r\n    if (!await checkAndSwitchNetwork()) {\r\n      setErrorMessage('Please switch to the Sepolia network to proceed.');\r\n      return;\r\n    }\r\n\r\n    if (!active || !library) {\r\n      setErrorMessage('Please connect your wallet first');\r\n      return;\r\n    }\r\n\r\n    if (parseFloat(inputAmount) > parseFloat(balances[inputToken])) {\r\n      setErrorMessage(`Insufficient ${inputToken} balance`);\r\n      return;\r\n    }\r\n\r\n    setErrorMessage('');\r\n    setIsLoading(true);\r\n    setIsExchanging(true);\r\n\r\n    try {\r\n      const signer = library.getSigner();\r\n      const contract = new ethers.Contract(CONTRACT_ADDRESS, CONTRACT_ABI, signer);\r\n\r\n      let tx;\r\n      const gasLimit = ethers.utils.hexlify(300000);\r\n\r\n      if (inputToken === 'ETH') {\r\n        tx = await contract.exchangeETHForToken(TOKENS[outputToken].address, {\r\n          value: ethers.utils.parseEther(inputAmount),\r\n          gasLimit: gasLimit\r\n        });\r\n      } else if (outputToken === 'ETH') {\r\n        const tokenContract = new ethers.Contract(TOKENS[inputToken].address, ERC20_ABI, signer);\r\n        const amount = ethers.utils.parseUnits(inputAmount, TOKENS[inputToken].decimals);\r\n        \r\n        await approveToken(tokenContract, amount);\r\n\r\n        tx = await contract.exchangeTokenForETH(TOKENS[inputToken].address, amount, {\r\n          gasLimit: gasLimit\r\n        });\r\n      } else {\r\n        const tokenContract = new ethers.Contract(TOKENS[inputToken].address, ERC20_ABI, signer);\r\n        const amount = ethers.utils.parseUnits(inputAmount, TOKENS[inputToken].decimals);\r\n        \r\n        await approveToken(tokenContract, amount);\r\n\r\n        tx = await contract.exchangeTokens(TOKENS[inputToken].address, TOKENS[outputToken].address, amount, {\r\n          gasLimit: gasLimit\r\n        });\r\n      }\r\n\r\n      const receipt = await tx.wait();\r\n      console.log('Transaction confirmed:', receipt.transactionHash);\r\n\r\n      setTransactions(prev => [{\r\n        hash: receipt.transactionHash,\r\n        from: inputToken,\r\n        to: outputToken,\r\n        amount: inputAmount\r\n      }, ...prev.slice(0, 4)]);\r\n\r\n      alert('Exchange successful!');\r\n      await updateBalances();\r\n    } catch (error) {\r\n      console.error('Exchange failed:', error);\r\n      handleError(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n      setIsExchanging(false);\r\n    }\r\n  };\r\n\r\n  const approveToken = async (tokenContract, amount) => {\r\n    const allowance = await tokenContract.allowance(await tokenContract.signer.getAddress(), CONTRACT_ADDRESS);\r\n    if (allowance.lt(amount)) {\r\n      const approveTx = await tokenContract.approve(CONTRACT_ADDRESS, amount);\r\n      await approveTx.wait();\r\n    }\r\n  };\r\n\r\n  const handleError = (error) => {\r\n    if (error.code === 4001) {\r\n      setErrorMessage('Transaction was rejected. Please try again.');\r\n    } else if (error.message.includes('insufficient funds')) {\r\n      setErrorMessage('Insufficient funds for this transaction. Please check your balance.');\r\n    } else if (error.message.includes('gas required exceeds allowance')) {\r\n      setErrorMessage('Transaction may fail. Try increasing gas limit.');\r\n    } else {\r\n      setErrorMessage(`Exchange failed: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const setMaxAmount = () => {\r\n    if (inputToken === 'ETH') {\r\n      const maxAmount = parseFloat(balances[inputToken]) - 0.01;\r\n      setInputAmount(maxAmount > 0 ? maxAmount.toString() : '0');\r\n    } else {\r\n      setInputAmount(balances[inputToken]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"exchange-container\">\r\n      <h2>Swap</h2>\r\n      <div className=\"swap-box\">\r\n        <div className=\"token-input\">\r\n          <div className=\"token-select\">\r\n            <select \r\n              value={inputToken} \r\n              onChange={handleInputTokenChange}\r\n            >\r\n              {Object.keys(TOKENS).map(token => (\r\n                <option key={token} value={token}>{TOKENS[token].name}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <input\r\n            type=\"number\"\r\n            value={inputAmount}\r\n            onChange={(e) => {\r\n              setInputAmount(e.target.value === '' ? '0' : e.target.value);\r\n              setError('');\r\n            }}\r\n            placeholder=\"0.0\"\r\n          />\r\n          <button onClick={setMaxAmount} className=\"max-button\">MAX</button>\r\n        </div>\r\n        <p className=\"balance\">Balance: {active ? parseFloat(balances[inputToken]).toFixed(4) : '0.0000'} {inputToken}</p>\r\n        \r\n        <div className=\"swap-icon\">↓</div>\r\n        \r\n        <div className=\"token-input\">\r\n          <div className=\"token-select\">\r\n            <select \r\n              value={outputToken} \r\n              onChange={handleOutputTokenChange}\r\n            >\r\n              {Object.keys(TOKENS).filter(token => token !== inputToken).map(token => (\r\n                <option key={token} value={token}>{TOKENS[token].name}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <input\r\n            type=\"number\"\r\n            value={outputAmount || '0.0000'}\r\n            readOnly\r\n            placeholder=\"0.0000\"\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n      \r\n      <button \r\n        onClick={handleExchange} \r\n        disabled={!active || !inputAmount || parseFloat(inputAmount) > parseFloat(balances[inputToken]) || isExchanging}\r\n        className=\"swap-button\"\r\n      >\r\n        {isLoading ? 'Processing...' : 'Swap'}\r\n      </button>\r\n\r\n      {isLoading && <div className=\"loader\">Loading...</div>}\r\n\r\n      <div className=\"transaction-history\">\r\n        <h3>Recent Transactions</h3>\r\n        {transactions.length === 0 ? (\r\n          <p>No recent transactions</p>\r\n        ) : (\r\n          <ul>\r\n            {transactions.map((tx, index) => (\r\n              <li key={index}>\r\n                {tx.from} to {tx.to}: {tx.amount}\r\n                <a href={`https://sepolia.etherscan.io/tx/${tx.hash}`} target=\"_blank\" rel=\"noopener noreferrer\">View</a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TokenExchange;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,gBAAgB,EAAEC,gBAAgB,EAAEC,YAAY,QAAQ,QAAQ;AACzE,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,SAAS,GAAG,CAChB;EACEC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE,CAAC;IAAEC,IAAI,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAU,CAAC,CAAC;EAC7CD,IAAI,EAAE,WAAW;EACjBE,OAAO,EAAE,CAAC;IAAEF,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAU,CAAC,CAAC;EAC/CA,IAAI,EAAE;AACR,CAAC,EACD;EACEH,QAAQ,EAAE,KAAK;EACfC,MAAM,EAAE,CACN;IAAEC,IAAI,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAU,CAAC,EACrC;IAAED,IAAI,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAU,CAAC,CACpC;EACDD,IAAI,EAAE,SAAS;EACfE,OAAO,EAAE,CAAC;IAAEF,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAO,CAAC,CAAC;EACrCA,IAAI,EAAE;AACR,CAAC,EACD;EACEH,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE,CACN;IAAEC,IAAI,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAU,CAAC,EACnC;IAAED,IAAI,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAU,CAAC,CACtC;EACDD,IAAI,EAAE,WAAW;EACjBE,OAAO,EAAE,CAAC;IAAEF,IAAI,EAAE,WAAW;IAAEC,IAAI,EAAE;EAAU,CAAC,CAAC;EACjDA,IAAI,EAAE;AACR,CAAC,CACF;AAED,MAAME,MAAM,GAAG;EACbC,GAAG,EAAE;IAAEC,MAAM,EAAE,KAAK;IAAEL,IAAI,EAAE,UAAU;IAAEM,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAK,CAAC;EACnEC,KAAK,EAAE;IAAEH,MAAM,EAAE,OAAO;IAAEL,IAAI,EAAE,OAAO;IAAES,OAAO,EAAE,4CAA4C;IAAEH,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAE,CAAC;EACxHG,KAAK,EAAE;IAAEL,MAAM,EAAE,OAAO;IAAEL,IAAI,EAAE,OAAO;IAAES,OAAO,EAAE,4CAA4C;IAAEH,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAE,CAAC;EACxHI,IAAI,EAAE;IAAEN,MAAM,EAAE,MAAM;IAAEL,IAAI,EAAE,MAAM;IAAES,OAAO,EAAE,4CAA4C;IAAEH,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAQ;AAC5H,CAAC;AAED,SAASK,aAAaA,CAAC;EAAEC,qBAAqB;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EACjE,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAG7B,YAAY,CAAC,CAAC;EAC5D,MAAM,CAAC8B,UAAU,EAAEC,aAAa,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACmC,WAAW,EAAEC,cAAc,CAAC,GAAGpC,QAAQ,CAAC,MAAM,CAAC;EACtD,MAAM,CAACqC,WAAW,EAAEC,cAAc,CAAC,GAAGtC,QAAQ,CAAC,GAAG,CAAC;EACnD,MAAM,CAACuC,YAAY,EAAEC,eAAe,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACyC,QAAQ,EAAEC,WAAW,CAAC,GAAG1C,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAAC2C,KAAK,EAAEC,QAAQ,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC6C,YAAY,EAAEC,eAAe,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC+C,YAAY,EAAEC,eAAe,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiD,SAAS,EAAEC,YAAY,CAAC,GAAGlD,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmD,YAAY,EAAEC,eAAe,CAAC,GAAGpD,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMqD,cAAc,GAAGnD,WAAW,CAAC,YAAY;IAC7C,IAAI,CAAC2B,MAAM,IAAI,CAACC,OAAO,IAAI,CAACC,OAAO,EAAE;IAErC,MAAMuB,WAAW,GAAG,CAAC,CAAC;IACtB,KAAK,MAAM,CAACpC,MAAM,EAAEqC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACzC,MAAM,CAAC,EAAE;MACpD,IAAIE,MAAM,KAAK,KAAK,EAAE;QACpB,MAAMwC,OAAO,GAAG,MAAM5B,OAAO,CAAC6B,UAAU,CAAC5B,OAAO,CAAC;QACjDuB,WAAW,CAACpC,MAAM,CAAC,GAAGd,MAAM,CAACwD,KAAK,CAACC,WAAW,CAACH,OAAO,CAAC;MACzD,CAAC,MAAM;QACL,IAAI;UACF,MAAMI,aAAa,GAAG,IAAI1D,MAAM,CAAC2D,QAAQ,CAACR,KAAK,CAACjC,OAAO,EAAEZ,SAAS,EAAEoB,OAAO,CAACkC,SAAS,CAAC,CAAC,CAAC;UACxF,MAAMN,OAAO,GAAG,MAAMI,aAAa,CAACG,SAAS,CAAClC,OAAO,CAAC;UACtDuB,WAAW,CAACpC,MAAM,CAAC,GAAGd,MAAM,CAACwD,KAAK,CAACM,WAAW,CAACR,OAAO,EAAEH,KAAK,CAACpC,QAAQ,CAAC;QACzE,CAAC,CAAC,OAAOwB,KAAK,EAAE;UACdwB,OAAO,CAACxB,KAAK,CAAC,8BAA8BzB,MAAM,GAAG,EAAEyB,KAAK,CAAC;UAC7DW,WAAW,CAACpC,MAAM,CAAC,GAAG,GAAG;QAC3B;MACF;IACF;IACAwB,WAAW,CAACY,WAAW,CAAC;EAC1B,CAAC,EAAE,CAACzB,MAAM,EAAEC,OAAO,EAAEC,OAAO,CAAC,CAAC;EAE9B9B,SAAS,CAAC,MAAM;IACd,IAAI4B,MAAM,IAAIC,OAAO,EAAE;MACrB,MAAMsC,IAAI,GAAG,MAAAA,CAAA,KAAY;QACvB,MAAMC,MAAM,GAAG,MAAM3C,qBAAqB,CAAC,CAAC;QAC5C,IAAI2C,MAAM,EAAE;UACV,MAAMhB,cAAc,CAAC,CAAC;QACxB,CAAC,MAAM;UACLc,OAAO,CAACG,IAAI,CAAC,0BAA0B,CAAC;QAC1C;MACF,CAAC;MACDF,IAAI,CAAC,CAAC;IACR;EACF,CAAC,EAAE,CAACvC,MAAM,EAAEC,OAAO,EAAEJ,qBAAqB,EAAE2B,cAAc,CAAC,CAAC;EAE5DpD,SAAS,CAAC,MAAM;IACdsE,qBAAqB,CAAC,CAAC;EACzB,CAAC,EAAE,CAAClC,WAAW,EAAEJ,UAAU,EAAEE,WAAW,CAAC,CAAC;EAE1C,MAAMoC,qBAAqB,GAAGA,CAAA,KAAM;IAClC,IAAI,CAAClC,WAAW,IAAI,CAACrB,MAAM,CAACiB,UAAU,CAAC,IAAI,CAACjB,MAAM,CAACmB,WAAW,CAAC,EAAE;MAC/DK,eAAe,CAAC,QAAQ,CAAC;MACzB;IACF;IAEA,MAAMgC,UAAU,GAAGC,UAAU,CAACpC,WAAW,CAAC;IAC1C,IAAIE,YAAY;IAEhB,IAAIN,UAAU,KAAK,KAAK,EAAE;MACxB,IAAIE,WAAW,KAAK,OAAO,IAAIA,WAAW,KAAK,OAAO,EAAE;QACtDI,YAAY,GAAGiC,UAAU;MAC3B,CAAC,MAAM,IAAIrC,WAAW,KAAK,MAAM,EAAE;QACjCI,YAAY,GAAIiC,UAAU,GAAG,KAAK,GAAI,WAAW;MACnD;IACF,CAAC,MAAM,IAAIrC,WAAW,KAAK,KAAK,EAAE;MAChC,IAAIF,UAAU,KAAK,OAAO,IAAIA,UAAU,KAAK,OAAO,EAAE;QACpDM,YAAY,GAAGiC,UAAU;MAC3B,CAAC,MAAM,IAAIvC,UAAU,KAAK,MAAM,EAAE;QAChCM,YAAY,GAAIiC,UAAU,GAAG,WAAW,GAAI,KAAK;MACnD;IACF,CAAC,MAAM;MACL,IAAIE,QAAQ;MACZ,IAAIzC,UAAU,KAAK,OAAO,IAAIA,UAAU,KAAK,OAAO,EAAE;QACpDyC,QAAQ,GAAGF,UAAU;MACvB,CAAC,MAAM,IAAIvC,UAAU,KAAK,MAAM,EAAE;QAChCyC,QAAQ,GAAIF,UAAU,GAAG,WAAW,GAAI,KAAK;MAC/C;MAEA,IAAIrC,WAAW,KAAK,OAAO,IAAIA,WAAW,KAAK,OAAO,EAAE;QACtDI,YAAY,GAAGmC,QAAQ;MACzB,CAAC,MAAM,IAAIvC,WAAW,KAAK,MAAM,EAAE;QACjCI,YAAY,GAAImC,QAAQ,GAAG,KAAK,GAAI,WAAW;MACjD;IACF;IAEAP,OAAO,CAACQ,GAAG,CAAC,cAAc,EAAE;MAC1BtC,WAAW;MACXJ,UAAU;MACVE,WAAW;MACXI;IACF,CAAC,CAAC;IAEFC,eAAe,CAACD,YAAY,CAACqC,OAAO,CAAC,CAAC,CAAC,CAAC;EAC1C,CAAC;EAED,MAAMC,sBAAsB,GAAIC,CAAC,IAAK;IACpC,MAAMC,aAAa,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IACpC/C,aAAa,CAAC6C,aAAa,CAAC;IAE5B,IAAIA,aAAa,KAAK5C,WAAW,EAAE;MACjC,MAAM+C,cAAc,GAAG1B,MAAM,CAAC2B,IAAI,CAACnE,MAAM,CAAC,CAACoE,IAAI,CAAC7B,KAAK,IAAIA,KAAK,KAAKwB,aAAa,CAAC;MACjF3C,cAAc,CAAC8C,cAAc,CAAC;IAChC;IAEA5C,cAAc,CAAC,GAAG,CAAC;IACnBE,eAAe,CAAC,QAAQ,CAAC;EAC3B,CAAC;EAED,MAAM6C,uBAAuB,GAAIP,CAAC,IAAK;IACrC,MAAMI,cAAc,GAAGJ,CAAC,CAACE,MAAM,CAACC,KAAK;IACrC7C,cAAc,CAAC8C,cAAc,CAAC;IAE9B,IAAIA,cAAc,KAAKjD,UAAU,EAAE;MACjC,MAAM8C,aAAa,GAAGvB,MAAM,CAAC2B,IAAI,CAACnE,MAAM,CAAC,CAACoE,IAAI,CAAC7B,KAAK,IAAIA,KAAK,KAAK2B,cAAc,CAAC;MACjFhD,aAAa,CAAC6C,aAAa,CAAC;IAC9B;IAEAzC,cAAc,CAAC,GAAG,CAAC;IACnBE,eAAe,CAAC,QAAQ,CAAC;EAC3B,CAAC;EAED,MAAM8C,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,EAAC,MAAM5D,qBAAqB,CAAC,CAAC,GAAE;MAClCsB,eAAe,CAAC,kDAAkD,CAAC;MACnE;IACF;IAEA,IAAI,CAACnB,MAAM,IAAI,CAACC,OAAO,EAAE;MACvBkB,eAAe,CAAC,kCAAkC,CAAC;MACnD;IACF;IAEA,IAAIyB,UAAU,CAACpC,WAAW,CAAC,GAAGoC,UAAU,CAAChC,QAAQ,CAACR,UAAU,CAAC,CAAC,EAAE;MAC9De,eAAe,CAAC,gBAAgBf,UAAU,UAAU,CAAC;MACrD;IACF;IAEAe,eAAe,CAAC,EAAE,CAAC;IACnBE,YAAY,CAAC,IAAI,CAAC;IAClBJ,eAAe,CAAC,IAAI,CAAC;IAErB,IAAI;MACF,MAAMyC,MAAM,GAAGzD,OAAO,CAACkC,SAAS,CAAC,CAAC;MAClC,MAAMwB,QAAQ,GAAG,IAAIpF,MAAM,CAAC2D,QAAQ,CAACzD,gBAAgB,EAAEC,YAAY,EAAEgF,MAAM,CAAC;MAE5E,IAAIE,EAAE;MACN,MAAMC,QAAQ,GAAGtF,MAAM,CAACwD,KAAK,CAAC+B,OAAO,CAAC,MAAM,CAAC;MAE7C,IAAI1D,UAAU,KAAK,KAAK,EAAE;QACxBwD,EAAE,GAAG,MAAMD,QAAQ,CAACI,mBAAmB,CAAC5E,MAAM,CAACmB,WAAW,CAAC,CAACb,OAAO,EAAE;UACnE2D,KAAK,EAAE7E,MAAM,CAACwD,KAAK,CAACiC,UAAU,CAACxD,WAAW,CAAC;UAC3CqD,QAAQ,EAAEA;QACZ,CAAC,CAAC;MACJ,CAAC,MAAM,IAAIvD,WAAW,KAAK,KAAK,EAAE;QAChC,MAAM2B,aAAa,GAAG,IAAI1D,MAAM,CAAC2D,QAAQ,CAAC/C,MAAM,CAACiB,UAAU,CAAC,CAACX,OAAO,EAAEZ,SAAS,EAAE6E,MAAM,CAAC;QACxF,MAAMO,MAAM,GAAG1F,MAAM,CAACwD,KAAK,CAACmC,UAAU,CAAC1D,WAAW,EAAErB,MAAM,CAACiB,UAAU,CAAC,CAACd,QAAQ,CAAC;QAEhF,MAAM6E,YAAY,CAAClC,aAAa,EAAEgC,MAAM,CAAC;QAEzCL,EAAE,GAAG,MAAMD,QAAQ,CAACS,mBAAmB,CAACjF,MAAM,CAACiB,UAAU,CAAC,CAACX,OAAO,EAAEwE,MAAM,EAAE;UAC1EJ,QAAQ,EAAEA;QACZ,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,MAAM5B,aAAa,GAAG,IAAI1D,MAAM,CAAC2D,QAAQ,CAAC/C,MAAM,CAACiB,UAAU,CAAC,CAACX,OAAO,EAAEZ,SAAS,EAAE6E,MAAM,CAAC;QACxF,MAAMO,MAAM,GAAG1F,MAAM,CAACwD,KAAK,CAACmC,UAAU,CAAC1D,WAAW,EAAErB,MAAM,CAACiB,UAAU,CAAC,CAACd,QAAQ,CAAC;QAEhF,MAAM6E,YAAY,CAAClC,aAAa,EAAEgC,MAAM,CAAC;QAEzCL,EAAE,GAAG,MAAMD,QAAQ,CAACU,cAAc,CAAClF,MAAM,CAACiB,UAAU,CAAC,CAACX,OAAO,EAAEN,MAAM,CAACmB,WAAW,CAAC,CAACb,OAAO,EAAEwE,MAAM,EAAE;UAClGJ,QAAQ,EAAEA;QACZ,CAAC,CAAC;MACJ;MAEA,MAAMS,OAAO,GAAG,MAAMV,EAAE,CAACW,IAAI,CAAC,CAAC;MAC/BjC,OAAO,CAACQ,GAAG,CAAC,wBAAwB,EAAEwB,OAAO,CAACE,eAAe,CAAC;MAE9DjD,eAAe,CAACkD,IAAI,IAAI,CAAC;QACvBC,IAAI,EAAEJ,OAAO,CAACE,eAAe;QAC7BG,IAAI,EAAEvE,UAAU;QAChBwE,EAAE,EAAEtE,WAAW;QACf2D,MAAM,EAAEzD;MACV,CAAC,EAAE,GAAGiE,IAAI,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAExBC,KAAK,CAAC,sBAAsB,CAAC;MAC7B,MAAMtD,cAAc,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdwB,OAAO,CAACxB,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxCiE,WAAW,CAACjE,KAAK,CAAC;IACpB,CAAC,SAAS;MACRO,YAAY,CAAC,KAAK,CAAC;MACnBJ,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,MAAMkD,YAAY,GAAG,MAAAA,CAAOlC,aAAa,EAAEgC,MAAM,KAAK;IACpD,MAAMe,SAAS,GAAG,MAAM/C,aAAa,CAAC+C,SAAS,CAAC,MAAM/C,aAAa,CAACyB,MAAM,CAACuB,UAAU,CAAC,CAAC,EAAExG,gBAAgB,CAAC;IAC1G,IAAIuG,SAAS,CAACE,EAAE,CAACjB,MAAM,CAAC,EAAE;MACxB,MAAMkB,SAAS,GAAG,MAAMlD,aAAa,CAACmD,OAAO,CAAC3G,gBAAgB,EAAEwF,MAAM,CAAC;MACvE,MAAMkB,SAAS,CAACZ,IAAI,CAAC,CAAC;IACxB;EACF,CAAC;EAED,MAAMQ,WAAW,GAAIjE,KAAK,IAAK;IAC7B,IAAIA,KAAK,CAACuE,IAAI,KAAK,IAAI,EAAE;MACvBlE,eAAe,CAAC,6CAA6C,CAAC;IAChE,CAAC,MAAM,IAAIL,KAAK,CAACwE,OAAO,CAACC,QAAQ,CAAC,oBAAoB,CAAC,EAAE;MACvDpE,eAAe,CAAC,qEAAqE,CAAC;IACxF,CAAC,MAAM,IAAIL,KAAK,CAACwE,OAAO,CAACC,QAAQ,CAAC,gCAAgC,CAAC,EAAE;MACnEpE,eAAe,CAAC,iDAAiD,CAAC;IACpE,CAAC,MAAM;MACLA,eAAe,CAAC,oBAAoBL,KAAK,CAACwE,OAAO,EAAE,CAAC;IACtD;EACF,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIpF,UAAU,KAAK,KAAK,EAAE;MACxB,MAAMqF,SAAS,GAAG7C,UAAU,CAAChC,QAAQ,CAACR,UAAU,CAAC,CAAC,GAAG,IAAI;MACzDK,cAAc,CAACgF,SAAS,GAAG,CAAC,GAAGA,SAAS,CAACC,QAAQ,CAAC,CAAC,GAAG,GAAG,CAAC;IAC5D,CAAC,MAAM;MACLjF,cAAc,CAACG,QAAQ,CAACR,UAAU,CAAC,CAAC;IACtC;EACF,CAAC;EAED,oBACExB,OAAA;IAAK+G,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjChH,OAAA;MAAAgH,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbpH,OAAA;MAAK+G,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBhH,OAAA;QAAK+G,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BhH,OAAA;UAAK+G,SAAS,EAAC,cAAc;UAAAC,QAAA,eAC3BhH,OAAA;YACEwE,KAAK,EAAEhD,UAAW;YAClB6F,QAAQ,EAAEjD,sBAAuB;YAAA4C,QAAA,EAEhCjE,MAAM,CAAC2B,IAAI,CAACnE,MAAM,CAAC,CAAC+G,GAAG,CAACxE,KAAK,iBAC5B9C,OAAA;cAAoBwE,KAAK,EAAE1B,KAAM;cAAAkE,QAAA,EAAEzG,MAAM,CAACuC,KAAK,CAAC,CAAC1C;YAAI,GAAxC0C,KAAK;cAAAmE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA4C,CAC/D;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNpH,OAAA;UACEK,IAAI,EAAC,QAAQ;UACbmE,KAAK,EAAE5C,WAAY;UACnByF,QAAQ,EAAGhD,CAAC,IAAK;YACfxC,cAAc,CAACwC,CAAC,CAACE,MAAM,CAACC,KAAK,KAAK,EAAE,GAAG,GAAG,GAAGH,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;YAC5DrC,QAAQ,CAAC,EAAE,CAAC;UACd,CAAE;UACFoF,WAAW,EAAC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACFpH,OAAA;UAAQwH,OAAO,EAAEZ,YAAa;UAACG,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC,eACNpH,OAAA;QAAG+G,SAAS,EAAC,SAAS;QAAAC,QAAA,GAAC,WAAS,EAAC5F,MAAM,GAAG4C,UAAU,CAAChC,QAAQ,CAACR,UAAU,CAAC,CAAC,CAAC2C,OAAO,CAAC,CAAC,CAAC,GAAG,QAAQ,EAAC,GAAC,EAAC3C,UAAU;MAAA;QAAAyF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAElHpH,OAAA;QAAK+G,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAElCpH,OAAA;QAAK+G,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BhH,OAAA;UAAK+G,SAAS,EAAC,cAAc;UAAAC,QAAA,eAC3BhH,OAAA;YACEwE,KAAK,EAAE9C,WAAY;YACnB2F,QAAQ,EAAEzC,uBAAwB;YAAAoC,QAAA,EAEjCjE,MAAM,CAAC2B,IAAI,CAACnE,MAAM,CAAC,CAACkH,MAAM,CAAC3E,KAAK,IAAIA,KAAK,KAAKtB,UAAU,CAAC,CAAC8F,GAAG,CAACxE,KAAK,iBAClE9C,OAAA;cAAoBwE,KAAK,EAAE1B,KAAM;cAAAkE,QAAA,EAAEzG,MAAM,CAACuC,KAAK,CAAC,CAAC1C;YAAI,GAAxC0C,KAAK;cAAAmE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA4C,CAC/D;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNpH,OAAA;UACEK,IAAI,EAAC,QAAQ;UACbmE,KAAK,EAAE1C,YAAY,IAAI,QAAS;UAChC4F,QAAQ;UACRH,WAAW,EAAC;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEL9E,YAAY,iBAAItC,OAAA;MAAG+G,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAE1E;IAAY;MAAA2E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEhEpH,OAAA;MACEwH,OAAO,EAAE3C,cAAe;MACxB8C,QAAQ,EAAE,CAACvG,MAAM,IAAI,CAACQ,WAAW,IAAIoC,UAAU,CAACpC,WAAW,CAAC,GAAGoC,UAAU,CAAChC,QAAQ,CAACR,UAAU,CAAC,CAAC,IAAIY,YAAa;MAChH2E,SAAS,EAAC,aAAa;MAAAC,QAAA,EAEtBxE,SAAS,GAAG,eAAe,GAAG;IAAM;MAAAyE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,EAER5E,SAAS,iBAAIxC,OAAA;MAAK+G,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEtDpH,OAAA;MAAK+G,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClChH,OAAA;QAAAgH,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC3B1E,YAAY,CAACkF,MAAM,KAAK,CAAC,gBACxB5H,OAAA;QAAAgH,QAAA,EAAG;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAE7BpH,OAAA;QAAAgH,QAAA,EACGtE,YAAY,CAAC4E,GAAG,CAAC,CAACtC,EAAE,EAAE6C,KAAK,kBAC1B7H,OAAA;UAAAgH,QAAA,GACGhC,EAAE,CAACe,IAAI,EAAC,MAAI,EAACf,EAAE,CAACgB,EAAE,EAAC,IAAE,EAAChB,EAAE,CAACK,MAAM,eAChCrF,OAAA;YAAG8H,IAAI,EAAE,mCAAmC9C,EAAE,CAACc,IAAI,EAAG;YAACvB,MAAM,EAAC,QAAQ;YAACwD,GAAG,EAAC,qBAAqB;YAAAf,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA,GAFlGS,KAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjG,EAAA,CAlTQH,aAAa;EAAA,QAC0BtB,YAAY;AAAA;AAAAsI,EAAA,GADnDhH,aAAa;AAoTtB,eAAeA,aAAa;AAAC,IAAAgH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}