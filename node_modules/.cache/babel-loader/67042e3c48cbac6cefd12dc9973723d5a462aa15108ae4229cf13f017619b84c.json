{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursor\\\\Defisite\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport { ethers } from 'ethers';\nimport TokenExchange from './components/TokenExchange';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SEPOLIA_CHAIN_ID = 11155111;\nexport const CONTRACT_ADDRESS = '0x...'; // 실제 컨트랙트 주소로 교체\nexport const CONTRACT_ABI = [/* 실제 ABI로 교체 */];\nconst injected = new InjectedConnector({\n  supportedChainIds: [SEPOLIA_CHAIN_ID]\n});\nfunction App() {\n  _s();\n  const {\n    active,\n    account,\n    activate,\n    deactivate,\n    chainId,\n    library\n  } = useWeb3React();\n  const [isConnecting, setIsConnecting] = useState(false);\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on('chainChanged', chainId => {\n        if (parseInt(chainId, 16) === SEPOLIA_CHAIN_ID) {\n          activate(injected);\n        }\n      });\n    }\n    return () => {\n      if (window.ethereum && window.ethereum.removeListener) {\n        window.ethereum.removeListener('chainChanged', () => {});\n      }\n    };\n  }, [activate]);\n  useEffect(() => {\n    if (active && chainId !== SEPOLIA_CHAIN_ID) {\n      checkAndSwitchNetwork();\n    }\n  }, [active, chainId]);\n  const handleAccountsChanged = useCallback(accounts => {\n    if (accounts.length > 0 && account !== accounts[0]) {\n      activate(injected);\n    } else {\n      deactivate();\n    }\n  }, [account, activate, deactivate]);\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n    if (ethereum && ethereum.on) {\n      ethereum.on('accountsChanged', handleAccountsChanged);\n    }\n    return () => {\n      if (ethereum && ethereum.removeListener) {\n        ethereum.removeListener('accountsChanged', handleAccountsChanged);\n      }\n    };\n  }, [handleAccountsChanged]);\n  async function connect() {\n    if (isConnecting) return;\n    setIsConnecting(true);\n    try {\n      await activate(injected, undefined, true);\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const network = await provider.getNetwork();\n      const connectedChainId = network.chainId;\n      if (connectedChainId !== SEPOLIA_CHAIN_ID) {\n        console.log('Connected to unsupported network. Attempting to switch to Sepolia...');\n        const userConfirmed = window.confirm(\"This application requires Sepolia network. Do you want to switch to Sepolia?\");\n        if (userConfirmed) {\n          const switched = await checkAndSwitchNetwork();\n          if (!switched) {\n            console.log('Failed to switch to Sepolia');\n            alert(\"Failed to switch to Sepolia network. Please switch manually in your wallet and try connecting again.\");\n            await deactivate();\n          } else {\n            console.log('Successfully switched to Sepolia');\n          }\n        } else {\n          console.log('User declined to switch network');\n          alert(\"This application requires Sepolia network. Please switch to Sepolia and try connecting again.\");\n          await deactivate();\n        }\n      } else {\n        console.log('Already on Sepolia network');\n      }\n    } catch (ex) {\n      console.error('Failed to connect:', ex);\n      if (ex.name === 'UnsupportedChainIdError') {\n        const userConfirmed = window.confirm(\"You're connected to an unsupported network. Do you want to switch to Sepolia?\");\n        if (userConfirmed) {\n          const switched = await checkAndSwitchNetwork();\n          if (!switched) {\n            alert(\"Failed to switch to Sepolia network. Please switch manually in your wallet and try connecting again.\");\n          }\n        } else {\n          alert(\"This application requires Sepolia network. Please switch to Sepolia and try connecting again.\");\n        }\n      } else {\n        alert(\"Failed to connect. Please make sure you have MetaMask installed and try again.\");\n      }\n    } finally {\n      setIsConnecting(false);\n    }\n  }\n  async function disconnect() {\n    try {\n      deactivate();\n    } catch (ex) {\n      console.error('Failed to disconnect:', ex);\n    }\n  }\n  const checkAndSwitchNetwork = async () => {\n    const {\n      ethereum\n    } = window;\n    if (!ethereum) {\n      console.error(\"No Ethereum provider found\");\n      return false;\n    }\n    try {\n      await switchToSepolia();\n      return true;\n    } catch (error) {\n      console.error('Failed to switch to Sepolia network:', error);\n      alert(\"Failed to switch to Sepolia network. Please switch manually in your wallet and try again.\");\n      return false;\n    }\n  };\n  async function switchToSepolia() {\n    const {\n      ethereum\n    } = window;\n    if (!ethereum) {\n      throw new Error(\"No Ethereum provider found\");\n    }\n    try {\n      await ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: `0x${SEPOLIA_CHAIN_ID.toString(16)}`\n        }]\n      });\n    } catch (switchError) {\n      if (switchError.code === 4902) {\n        try {\n          await ethereum.request({\n            method: \"wallet_addEthereumChain\",\n            params: [{\n              chainId: `0x${SEPOLIA_CHAIN_ID.toString(16)}`,\n              chainName: \"Sepolia Test Network\",\n              rpcUrls: [\"https://rpc.sepolia.org\"],\n              nativeCurrency: {\n                name: \"Sepolia Ether\",\n                symbol: \"SEP\",\n                decimals: 18\n              },\n              blockExplorerUrls: [\"https://sepolia.etherscan.io\"]\n            }]\n          });\n          await ethereum.request({\n            method: \"wallet_switchEthereumChain\",\n            params: [{\n              chainId: `0x${SEPOLIA_CHAIN_ID.toString(16)}`\n            }]\n          });\n        } catch (addError) {\n          throw new Error('Failed to add Sepolia network');\n        }\n      } else {\n        throw switchError;\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"logo-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/gpex_logo_whtie_1000px.webp\",\n            alt: \"GPEX Token Exchange\",\n            className: \"logo\",\n            style: {\n              width: '200px',\n              height: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-buttons\",\n          children: active ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"wallet-address-button\",\n              children: [account.substring(0, 4), \"...\", account.substring(account.length - 4)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: disconnect,\n              className: \"disconnect-button\",\n              children: \"Disconnect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), chainId !== SEPOLIA_CHAIN_ID && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: checkAndSwitchNetwork,\n              className: \"switch-network-button\",\n              children: \"Switch to Sepolia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: connect,\n            disabled: isConnecting,\n            className: \"connect-wallet-button\",\n            children: isConnecting ? 'Connecting...' : 'Connect Wallet'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content-container\",\n      children: /*#__PURE__*/_jsxDEV(TokenExchange, {\n        checkAndSwitchNetwork: checkAndSwitchNetwork,\n        switchToSepolia: switchToSepolia\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xsBBBEebahsOfaSCn4CskjvRDXw=\", false, function () {\n  return [useWeb3React];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useCallback","useState","useWeb3React","InjectedConnector","ethers","TokenExchange","jsxDEV","_jsxDEV","Fragment","_Fragment","SEPOLIA_CHAIN_ID","CONTRACT_ADDRESS","CONTRACT_ABI","injected","supportedChainIds","App","_s","active","account","activate","deactivate","chainId","library","isConnecting","setIsConnecting","window","ethereum","on","parseInt","removeListener","checkAndSwitchNetwork","handleAccountsChanged","accounts","length","connect","undefined","provider","providers","Web3Provider","network","getNetwork","connectedChainId","console","log","userConfirmed","confirm","switched","alert","ex","error","name","disconnect","switchToSepolia","Error","request","method","params","toString","switchError","code","chainName","rpcUrls","nativeCurrency","symbol","decimals","blockExplorerUrls","addError","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","width","height","substring","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Cursor/Defisite/src/App.js"],"sourcesContent":["import React, { useEffect, useCallback, useState } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { InjectedConnector } from '@web3-react/injected-connector';\r\nimport { ethers } from 'ethers';\r\nimport TokenExchange from './components/TokenExchange';\r\nimport './App.css';\r\n\r\nexport const SEPOLIA_CHAIN_ID = 11155111;\r\nexport const CONTRACT_ADDRESS = '0x...'; // 실제 컨트랙트 주소로 교체\r\nexport const CONTRACT_ABI = [/* 실제 ABI로 교체 */];\r\n\r\nconst injected = new InjectedConnector({\r\n  supportedChainIds: [SEPOLIA_CHAIN_ID]\r\n});\r\n\r\nfunction App() {\r\n  const { active, account, activate, deactivate, chainId, library } = useWeb3React();\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (window.ethereum) {\r\n      window.ethereum.on('chainChanged', (chainId) => {\r\n        if (parseInt(chainId, 16) === SEPOLIA_CHAIN_ID) {\r\n          activate(injected);\r\n        }\r\n      });\r\n    }\r\n    return () => {\r\n      if (window.ethereum && window.ethereum.removeListener) {\r\n        window.ethereum.removeListener('chainChanged', () => {});\r\n      }\r\n    };\r\n  }, [activate]);\r\n\r\n  useEffect(() => {\r\n    if (active && chainId !== SEPOLIA_CHAIN_ID) {\r\n      checkAndSwitchNetwork();\r\n    }\r\n  }, [active, chainId]);\r\n\r\n  const handleAccountsChanged = useCallback((accounts) => {\r\n    if (accounts.length > 0 && account !== accounts[0]) {\r\n      activate(injected);\r\n    } else {\r\n      deactivate();\r\n    }\r\n  }, [account, activate, deactivate]);\r\n\r\n  useEffect(() => {\r\n    const { ethereum } = window;\r\n    if (ethereum && ethereum.on) {\r\n      ethereum.on('accountsChanged', handleAccountsChanged);\r\n    }\r\n\r\n    return () => {\r\n      if (ethereum && ethereum.removeListener) {\r\n        ethereum.removeListener('accountsChanged', handleAccountsChanged);\r\n      }\r\n    };\r\n  }, [handleAccountsChanged]);\r\n\r\n  async function connect() {\r\n    if (isConnecting) return;\r\n    setIsConnecting(true);\r\n    try {\r\n      await activate(injected, undefined, true);\r\n      \r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const network = await provider.getNetwork();\r\n      const connectedChainId = network.chainId;\r\n      \r\n      if (connectedChainId !== SEPOLIA_CHAIN_ID) {\r\n        console.log('Connected to unsupported network. Attempting to switch to Sepolia...');\r\n        const userConfirmed = window.confirm(\"This application requires Sepolia network. Do you want to switch to Sepolia?\");\r\n        if (userConfirmed) {\r\n          const switched = await checkAndSwitchNetwork();\r\n          if (!switched) {\r\n            console.log('Failed to switch to Sepolia');\r\n            alert(\"Failed to switch to Sepolia network. Please switch manually in your wallet and try connecting again.\");\r\n            await deactivate();\r\n          } else {\r\n            console.log('Successfully switched to Sepolia');\r\n          }\r\n        } else {\r\n          console.log('User declined to switch network');\r\n          alert(\"This application requires Sepolia network. Please switch to Sepolia and try connecting again.\");\r\n          await deactivate();\r\n        }\r\n      } else {\r\n        console.log('Already on Sepolia network');\r\n      }\r\n    } catch (ex) {\r\n      console.error('Failed to connect:', ex);\r\n      if (ex.name === 'UnsupportedChainIdError') {\r\n        const userConfirmed = window.confirm(\"You're connected to an unsupported network. Do you want to switch to Sepolia?\");\r\n        if (userConfirmed) {\r\n          const switched = await checkAndSwitchNetwork();\r\n          if (!switched) {\r\n            alert(\"Failed to switch to Sepolia network. Please switch manually in your wallet and try connecting again.\");\r\n          }\r\n        } else {\r\n          alert(\"This application requires Sepolia network. Please switch to Sepolia and try connecting again.\");\r\n        }\r\n      } else {\r\n        alert(\"Failed to connect. Please make sure you have MetaMask installed and try again.\");\r\n      }\r\n    } finally {\r\n      setIsConnecting(false);\r\n    }\r\n  }\r\n\r\n  async function disconnect() {\r\n    try {\r\n      deactivate();\r\n    } catch (ex) {\r\n      console.error('Failed to disconnect:', ex);\r\n    }\r\n  }\r\n\r\n  const checkAndSwitchNetwork = async () => {\r\n    const { ethereum } = window;\r\n    if (!ethereum) {\r\n      console.error(\"No Ethereum provider found\");\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      await switchToSepolia();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to switch to Sepolia network:', error);\r\n      alert(\"Failed to switch to Sepolia network. Please switch manually in your wallet and try again.\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  async function switchToSepolia() {\r\n    const { ethereum } = window;\r\n    if (!ethereum) {\r\n      throw new Error(\"No Ethereum provider found\");\r\n    }\r\n\r\n    try {\r\n      await ethereum.request({\r\n        method: \"wallet_switchEthereumChain\",\r\n        params: [{ chainId: `0x${SEPOLIA_CHAIN_ID.toString(16)}` }],\r\n      });\r\n    } catch (switchError) {\r\n      if (switchError.code === 4902) {\r\n        try {\r\n          await ethereum.request({\r\n            method: \"wallet_addEthereumChain\",\r\n            params: [\r\n              {\r\n                chainId: `0x${SEPOLIA_CHAIN_ID.toString(16)}`,\r\n                chainName: \"Sepolia Test Network\",\r\n                rpcUrls: [\"https://rpc.sepolia.org\"],\r\n                nativeCurrency: {\r\n                  name: \"Sepolia Ether\",\r\n                  symbol: \"SEP\",\r\n                  decimals: 18\r\n                },\r\n                blockExplorerUrls: [\"https://sepolia.etherscan.io\"]\r\n              }\r\n            ],\r\n          });\r\n          await ethereum.request({\r\n            method: \"wallet_switchEthereumChain\",\r\n            params: [{ chainId: `0x${SEPOLIA_CHAIN_ID.toString(16)}` }],\r\n          });\r\n        } catch (addError) {\r\n          throw new Error('Failed to add Sepolia network');\r\n        }\r\n      } else {\r\n        throw switchError;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"placeholder\"></div>\r\n          <h1 className=\"logo-container\">\r\n            <img \r\n              src=\"/gpex_logo_whtie_1000px.webp\" \r\n              alt=\"GPEX Token Exchange\" \r\n              className=\"logo\" \r\n              style={{\r\n                width: '200px',\r\n                height: 'auto'\r\n              }}\r\n            />\r\n          </h1>\r\n          <div className=\"wallet-buttons\">\r\n            {active ? (\r\n              <>\r\n                <button className=\"wallet-address-button\">\r\n                  {account.substring(0, 4)}...{account.substring(account.length - 4)}\r\n                </button>\r\n                <button onClick={disconnect} className=\"disconnect-button\">\r\n                  Disconnect\r\n                </button>\r\n                {chainId !== SEPOLIA_CHAIN_ID && (\r\n                  <button onClick={checkAndSwitchNetwork} className=\"switch-network-button\">\r\n                    Switch to Sepolia\r\n                  </button>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <button onClick={connect} disabled={isConnecting} className=\"connect-wallet-button\">\r\n                {isConnecting ? 'Connecting...' : 'Connect Wallet'}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <main className=\"content-container\">\r\n        <TokenExchange checkAndSwitchNetwork={checkAndSwitchNetwork} switchToSepolia={switchToSepolia} />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC/D,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,OAAO,MAAMC,gBAAgB,GAAG,QAAQ;AACxC,OAAO,MAAMC,gBAAgB,GAAG,OAAO,CAAC,CAAC;AACzC,OAAO,MAAMC,YAAY,GAAG,CAAC,iBAAiB;AAE9C,MAAMC,QAAQ,GAAG,IAAIV,iBAAiB,CAAC;EACrCW,iBAAiB,EAAE,CAACJ,gBAAgB;AACtC,CAAC,CAAC;AAEF,SAASK,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,UAAU;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGpB,YAAY,CAAC,CAAC;EAClF,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAEvDF,SAAS,CAAC,MAAM;IACd,IAAI0B,MAAM,CAACC,QAAQ,EAAE;MACnBD,MAAM,CAACC,QAAQ,CAACC,EAAE,CAAC,cAAc,EAAGN,OAAO,IAAK;QAC9C,IAAIO,QAAQ,CAACP,OAAO,EAAE,EAAE,CAAC,KAAKX,gBAAgB,EAAE;UAC9CS,QAAQ,CAACN,QAAQ,CAAC;QACpB;MACF,CAAC,CAAC;IACJ;IACA,OAAO,MAAM;MACX,IAAIY,MAAM,CAACC,QAAQ,IAAID,MAAM,CAACC,QAAQ,CAACG,cAAc,EAAE;QACrDJ,MAAM,CAACC,QAAQ,CAACG,cAAc,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC,CAAC;MAC1D;IACF,CAAC;EACH,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;EAEdpB,SAAS,CAAC,MAAM;IACd,IAAIkB,MAAM,IAAII,OAAO,KAAKX,gBAAgB,EAAE;MAC1CoB,qBAAqB,CAAC,CAAC;IACzB;EACF,CAAC,EAAE,CAACb,MAAM,EAAEI,OAAO,CAAC,CAAC;EAErB,MAAMU,qBAAqB,GAAG/B,WAAW,CAAEgC,QAAQ,IAAK;IACtD,IAAIA,QAAQ,CAACC,MAAM,GAAG,CAAC,IAAIf,OAAO,KAAKc,QAAQ,CAAC,CAAC,CAAC,EAAE;MAClDb,QAAQ,CAACN,QAAQ,CAAC;IACpB,CAAC,MAAM;MACLO,UAAU,CAAC,CAAC;IACd;EACF,CAAC,EAAE,CAACF,OAAO,EAAEC,QAAQ,EAAEC,UAAU,CAAC,CAAC;EAEnCrB,SAAS,CAAC,MAAM;IACd,MAAM;MAAE2B;IAAS,CAAC,GAAGD,MAAM;IAC3B,IAAIC,QAAQ,IAAIA,QAAQ,CAACC,EAAE,EAAE;MAC3BD,QAAQ,CAACC,EAAE,CAAC,iBAAiB,EAAEI,qBAAqB,CAAC;IACvD;IAEA,OAAO,MAAM;MACX,IAAIL,QAAQ,IAAIA,QAAQ,CAACG,cAAc,EAAE;QACvCH,QAAQ,CAACG,cAAc,CAAC,iBAAiB,EAAEE,qBAAqB,CAAC;MACnE;IACF,CAAC;EACH,CAAC,EAAE,CAACA,qBAAqB,CAAC,CAAC;EAE3B,eAAeG,OAAOA,CAAA,EAAG;IACvB,IAAIX,YAAY,EAAE;IAClBC,eAAe,CAAC,IAAI,CAAC;IACrB,IAAI;MACF,MAAML,QAAQ,CAACN,QAAQ,EAAEsB,SAAS,EAAE,IAAI,CAAC;MAEzC,MAAMC,QAAQ,GAAG,IAAIhC,MAAM,CAACiC,SAAS,CAACC,YAAY,CAACb,MAAM,CAACC,QAAQ,CAAC;MACnE,MAAMa,OAAO,GAAG,MAAMH,QAAQ,CAACI,UAAU,CAAC,CAAC;MAC3C,MAAMC,gBAAgB,GAAGF,OAAO,CAAClB,OAAO;MAExC,IAAIoB,gBAAgB,KAAK/B,gBAAgB,EAAE;QACzCgC,OAAO,CAACC,GAAG,CAAC,sEAAsE,CAAC;QACnF,MAAMC,aAAa,GAAGnB,MAAM,CAACoB,OAAO,CAAC,8EAA8E,CAAC;QACpH,IAAID,aAAa,EAAE;UACjB,MAAME,QAAQ,GAAG,MAAMhB,qBAAqB,CAAC,CAAC;UAC9C,IAAI,CAACgB,QAAQ,EAAE;YACbJ,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;YAC1CI,KAAK,CAAC,sGAAsG,CAAC;YAC7G,MAAM3B,UAAU,CAAC,CAAC;UACpB,CAAC,MAAM;YACLsB,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;UACjD;QACF,CAAC,MAAM;UACLD,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;UAC9CI,KAAK,CAAC,+FAA+F,CAAC;UACtG,MAAM3B,UAAU,CAAC,CAAC;QACpB;MACF,CAAC,MAAM;QACLsB,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MAC3C;IACF,CAAC,CAAC,OAAOK,EAAE,EAAE;MACXN,OAAO,CAACO,KAAK,CAAC,oBAAoB,EAAED,EAAE,CAAC;MACvC,IAAIA,EAAE,CAACE,IAAI,KAAK,yBAAyB,EAAE;QACzC,MAAMN,aAAa,GAAGnB,MAAM,CAACoB,OAAO,CAAC,+EAA+E,CAAC;QACrH,IAAID,aAAa,EAAE;UACjB,MAAME,QAAQ,GAAG,MAAMhB,qBAAqB,CAAC,CAAC;UAC9C,IAAI,CAACgB,QAAQ,EAAE;YACbC,KAAK,CAAC,sGAAsG,CAAC;UAC/G;QACF,CAAC,MAAM;UACLA,KAAK,CAAC,+FAA+F,CAAC;QACxG;MACF,CAAC,MAAM;QACLA,KAAK,CAAC,gFAAgF,CAAC;MACzF;IACF,CAAC,SAAS;MACRvB,eAAe,CAAC,KAAK,CAAC;IACxB;EACF;EAEA,eAAe2B,UAAUA,CAAA,EAAG;IAC1B,IAAI;MACF/B,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,OAAO4B,EAAE,EAAE;MACXN,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAED,EAAE,CAAC;IAC5C;EACF;EAEA,MAAMlB,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,MAAM;MAAEJ;IAAS,CAAC,GAAGD,MAAM;IAC3B,IAAI,CAACC,QAAQ,EAAE;MACbgB,OAAO,CAACO,KAAK,CAAC,4BAA4B,CAAC;MAC3C,OAAO,KAAK;IACd;IAEA,IAAI;MACF,MAAMG,eAAe,CAAC,CAAC;MACvB,OAAO,IAAI;IACb,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5DF,KAAK,CAAC,2FAA2F,CAAC;MAClG,OAAO,KAAK;IACd;EACF,CAAC;EAED,eAAeK,eAAeA,CAAA,EAAG;IAC/B,MAAM;MAAE1B;IAAS,CAAC,GAAGD,MAAM;IAC3B,IAAI,CAACC,QAAQ,EAAE;MACb,MAAM,IAAI2B,KAAK,CAAC,4BAA4B,CAAC;IAC/C;IAEA,IAAI;MACF,MAAM3B,QAAQ,CAAC4B,OAAO,CAAC;QACrBC,MAAM,EAAE,4BAA4B;QACpCC,MAAM,EAAE,CAAC;UAAEnC,OAAO,EAAE,KAAKX,gBAAgB,CAAC+C,QAAQ,CAAC,EAAE,CAAC;QAAG,CAAC;MAC5D,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,WAAW,EAAE;MACpB,IAAIA,WAAW,CAACC,IAAI,KAAK,IAAI,EAAE;QAC7B,IAAI;UACF,MAAMjC,QAAQ,CAAC4B,OAAO,CAAC;YACrBC,MAAM,EAAE,yBAAyB;YACjCC,MAAM,EAAE,CACN;cACEnC,OAAO,EAAE,KAAKX,gBAAgB,CAAC+C,QAAQ,CAAC,EAAE,CAAC,EAAE;cAC7CG,SAAS,EAAE,sBAAsB;cACjCC,OAAO,EAAE,CAAC,yBAAyB,CAAC;cACpCC,cAAc,EAAE;gBACdZ,IAAI,EAAE,eAAe;gBACrBa,MAAM,EAAE,KAAK;gBACbC,QAAQ,EAAE;cACZ,CAAC;cACDC,iBAAiB,EAAE,CAAC,8BAA8B;YACpD,CAAC;UAEL,CAAC,CAAC;UACF,MAAMvC,QAAQ,CAAC4B,OAAO,CAAC;YACrBC,MAAM,EAAE,4BAA4B;YACpCC,MAAM,EAAE,CAAC;cAAEnC,OAAO,EAAE,KAAKX,gBAAgB,CAAC+C,QAAQ,CAAC,EAAE,CAAC;YAAG,CAAC;UAC5D,CAAC,CAAC;QACJ,CAAC,CAAC,OAAOS,QAAQ,EAAE;UACjB,MAAM,IAAIb,KAAK,CAAC,+BAA+B,CAAC;QAClD;MACF,CAAC,MAAM;QACL,MAAMK,WAAW;MACnB;IACF;EACF;EAEA,oBACEnD,OAAA;IAAK4D,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB7D,OAAA;MAAQ4D,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5B7D,OAAA;QAAK4D,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7B7D,OAAA;UAAK4D,SAAS,EAAC;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACnCjE,OAAA;UAAI4D,SAAS,EAAC,gBAAgB;UAAAC,QAAA,eAC5B7D,OAAA;YACEkE,GAAG,EAAC,8BAA8B;YAClCC,GAAG,EAAC,qBAAqB;YACzBP,SAAS,EAAC,MAAM;YAChBQ,KAAK,EAAE;cACLC,KAAK,EAAE,OAAO;cACdC,MAAM,EAAE;YACV;UAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACLjE,OAAA;UAAK4D,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAC5BnD,MAAM,gBACLV,OAAA,CAAAE,SAAA;YAAA2D,QAAA,gBACE7D,OAAA;cAAQ4D,SAAS,EAAC,uBAAuB;cAAAC,QAAA,GACtClD,OAAO,CAAC4D,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,KAAG,EAAC5D,OAAO,CAAC4D,SAAS,CAAC5D,OAAO,CAACe,MAAM,GAAG,CAAC,CAAC;YAAA;cAAAoC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5D,CAAC,eACTjE,OAAA;cAAQwE,OAAO,EAAE5B,UAAW;cAACgB,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAAC;YAE3D;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACRnD,OAAO,KAAKX,gBAAgB,iBAC3BH,OAAA;cAAQwE,OAAO,EAAEjD,qBAAsB;cAACqC,SAAS,EAAC,uBAAuB;cAAAC,QAAA,EAAC;YAE1E;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACT;UAAA,eACD,CAAC,gBAEHjE,OAAA;YAAQwE,OAAO,EAAE7C,OAAQ;YAAC8C,QAAQ,EAAEzD,YAAa;YAAC4C,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAChF7C,YAAY,GAAG,eAAe,GAAG;UAAgB;YAAA8C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C;QACT;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACTjE,OAAA;MAAM4D,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eACjC7D,OAAA,CAACF,aAAa;QAACyB,qBAAqB,EAAEA,qBAAsB;QAACsB,eAAe,EAAEA;MAAgB;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7F,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACxD,EAAA,CAhNQD,GAAG;EAAA,QAC0Db,YAAY;AAAA;AAAA+E,EAAA,GADzElE,GAAG;AAkNZ,eAAeA,GAAG;AAAC,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}