{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursor\\\\Defisite\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport { ethers } from 'ethers';\nimport TokenExchange from './components/TokenExchange';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SEPOLIA_CHAIN_ID = 11155111;\nexport const CONTRACT_ADDRESS = '0x...'; // 실제 컨트랙트 주소로 교체\nexport const CONTRACT_ABI = [/* 실제 ABI로 교체 */];\nconst injected = new InjectedConnector({\n  supportedChainIds: [SEPOLIA_CHAIN_ID]\n});\nfunction App() {\n  _s();\n  const {\n    active,\n    account,\n    activate,\n    deactivate,\n    chainId,\n    library\n  } = useWeb3React();\n  const [isConnecting, setIsConnecting] = useState(false);\n  useEffect(() => {\n    if (active && library) {\n      checkAndSwitchNetwork();\n    }\n  }, [active, library]);\n  const handleAccountsChanged = useCallback(accounts => {\n    if (accounts.length > 0 && account !== accounts[0]) {\n      activate(injected);\n    } else {\n      deactivate();\n    }\n  }, [account, activate, deactivate]);\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n    if (ethereum && ethereum.on) {\n      ethereum.on('accountsChanged', handleAccountsChanged);\n    }\n    return () => {\n      if (ethereum && ethereum.removeListener) {\n        ethereum.removeListener('accountsChanged', handleAccountsChanged);\n      }\n    };\n  }, [handleAccountsChanged]);\n  async function connect() {\n    if (isConnecting) return;\n    setIsConnecting(true);\n    try {\n      await activate(injected, undefined, true);\n\n      // 라이브러리 초기화를 기다리는 대신, 즉시 provider를 가져옵니다.\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const network = await provider.getNetwork();\n      const connectedChainId = network.chainId;\n      if (connectedChainId !== SEPOLIA_CHAIN_ID) {\n        console.log('Switching to Sepolia network...');\n        const switched = await checkAndSwitchNetwork();\n        if (!switched) {\n          console.log('Failed to switch to Sepolia');\n          alert(\"This application requires Sepolia network. Please switch to Sepolia and try connecting again.\");\n          await deactivate();\n        } else {\n          console.log('Successfully switched to Sepolia');\n        }\n      } else {\n        console.log('Already on Sepolia network');\n      }\n    } catch (ex) {\n      console.error('Failed to connect:', ex);\n      // 에러 처리 로직은 그대로 유지\n    } finally {\n      setIsConnecting(false);\n    }\n  }\n  async function disconnect() {\n    try {\n      deactivate();\n    } catch (ex) {\n      console.error('Failed to disconnect:', ex);\n    }\n  }\n  const checkAndSwitchNetwork = async () => {\n    const {\n      ethereum\n    } = window;\n    if (!ethereum) {\n      console.error(\"No Ethereum provider found\");\n      return false;\n    }\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    const network = await provider.getNetwork();\n    if (network.chainId !== SEPOLIA_CHAIN_ID) {\n      try {\n        await switchToSepolia();\n        return true;\n      } catch (error) {\n        console.error('Failed to switch to Sepolia network:', error);\n        alert(\"Failed to switch to Sepolia network. Please switch manually in your wallet and try again.\");\n        return false;\n      }\n    }\n    return true;\n  };\n  async function switchToSepolia() {\n    const {\n      ethereum\n    } = window;\n    if (!ethereum) {\n      throw new Error(\"No Ethereum provider found\");\n    }\n    try {\n      await ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: `0x${SEPOLIA_CHAIN_ID.toString(16)}`\n        }]\n      });\n    } catch (switchError) {\n      if (switchError.code === 4902) {\n        try {\n          await ethereum.request({\n            method: \"wallet_addEthereumChain\",\n            params: [{\n              chainId: `0x${SEPOLIA_CHAIN_ID.toString(16)}`,\n              chainName: \"Sepolia Test Network\",\n              rpcUrls: [\"https://rpc.sepolia.org\"],\n              nativeCurrency: {\n                name: \"Sepolia Ether\",\n                symbol: \"SEP\",\n                decimals: 18\n              },\n              blockExplorerUrls: [\"https://sepolia.etherscan.io\"]\n            }]\n          });\n          await ethereum.request({\n            method: \"wallet_switchEthereumChain\",\n            params: [{\n              chainId: `0x${SEPOLIA_CHAIN_ID.toString(16)}`\n            }]\n          });\n        } catch (addError) {\n          throw new Error('Failed to add Sepolia network');\n        }\n      } else {\n        throw switchError;\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"logo-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/gpex_logo_whtie_1000px.webp\",\n            alt: \"GPEX Token Exchange\",\n            className: \"logo\",\n            style: {\n              width: '200px',\n              height: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-buttons\",\n          children: active ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"wallet-address-button\",\n              children: [account.substring(0, 4), \"...\", account.substring(account.length - 4)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: disconnect,\n              className: \"disconnect-button\",\n              children: \"Disconnect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), chainId !== SEPOLIA_CHAIN_ID && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: checkAndSwitchNetwork,\n              className: \"switch-network-button\",\n              children: \"Switch to Sepolia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: connect,\n            disabled: isConnecting,\n            className: \"connect-wallet-button\",\n            children: isConnecting ? 'Connecting...' : 'Connect Wallet'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content-container\",\n      children: /*#__PURE__*/_jsxDEV(TokenExchange, {\n        checkAndSwitchNetwork: checkAndSwitchNetwork,\n        switchToSepolia: switchToSepolia\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"P3BNZyjWv8YXKHyYQDDFET1w0c8=\", false, function () {\n  return [useWeb3React];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useCallback","useState","useWeb3React","InjectedConnector","ethers","TokenExchange","jsxDEV","_jsxDEV","Fragment","_Fragment","SEPOLIA_CHAIN_ID","CONTRACT_ADDRESS","CONTRACT_ABI","injected","supportedChainIds","App","_s","active","account","activate","deactivate","chainId","library","isConnecting","setIsConnecting","checkAndSwitchNetwork","handleAccountsChanged","accounts","length","ethereum","window","on","removeListener","connect","undefined","provider","providers","Web3Provider","network","getNetwork","connectedChainId","console","log","switched","alert","ex","error","disconnect","switchToSepolia","Error","request","method","params","toString","switchError","code","chainName","rpcUrls","nativeCurrency","name","symbol","decimals","blockExplorerUrls","addError","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","width","height","substring","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Cursor/Defisite/src/App.js"],"sourcesContent":["import React, { useEffect, useCallback, useState } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { InjectedConnector } from '@web3-react/injected-connector';\r\nimport { ethers } from 'ethers';\r\nimport TokenExchange from './components/TokenExchange';\r\nimport './App.css';\r\n\r\nexport const SEPOLIA_CHAIN_ID = 11155111;\r\nexport const CONTRACT_ADDRESS = '0x...'; // 실제 컨트랙트 주소로 교체\r\nexport const CONTRACT_ABI = [/* 실제 ABI로 교체 */];\r\n\r\nconst injected = new InjectedConnector({\r\n  supportedChainIds: [SEPOLIA_CHAIN_ID]\r\n});\r\n\r\nfunction App() {\r\n  const { active, account, activate, deactivate, chainId, library } = useWeb3React();\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (active && library) {\r\n      checkAndSwitchNetwork();\r\n    }\r\n  }, [active, library]);\r\n\r\n  const handleAccountsChanged = useCallback((accounts) => {\r\n    if (accounts.length > 0 && account !== accounts[0]) {\r\n      activate(injected);\r\n    } else {\r\n      deactivate();\r\n    }\r\n  }, [account, activate, deactivate]);\r\n\r\n  useEffect(() => {\r\n    const { ethereum } = window;\r\n    if (ethereum && ethereum.on) {\r\n      ethereum.on('accountsChanged', handleAccountsChanged);\r\n    }\r\n\r\n    return () => {\r\n      if (ethereum && ethereum.removeListener) {\r\n        ethereum.removeListener('accountsChanged', handleAccountsChanged);\r\n      }\r\n    };\r\n  }, [handleAccountsChanged]);\r\n\r\n  async function connect() {\r\n    if (isConnecting) return;\r\n    setIsConnecting(true);\r\n    try {\r\n      await activate(injected, undefined, true);\r\n      \r\n      // 라이브러리 초기화를 기다리는 대신, 즉시 provider를 가져옵니다.\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const network = await provider.getNetwork();\r\n      const connectedChainId = network.chainId;\r\n      \r\n      if (connectedChainId !== SEPOLIA_CHAIN_ID) {\r\n        console.log('Switching to Sepolia network...');\r\n        const switched = await checkAndSwitchNetwork();\r\n        if (!switched) {\r\n          console.log('Failed to switch to Sepolia');\r\n          alert(\"This application requires Sepolia network. Please switch to Sepolia and try connecting again.\");\r\n          await deactivate();\r\n        } else {\r\n          console.log('Successfully switched to Sepolia');\r\n        }\r\n      } else {\r\n        console.log('Already on Sepolia network');\r\n      }\r\n    } catch (ex) {\r\n      console.error('Failed to connect:', ex);\r\n      // 에러 처리 로직은 그대로 유지\r\n    } finally {\r\n      setIsConnecting(false);\r\n    }\r\n  }\r\n\r\n  async function disconnect() {\r\n    try {\r\n      deactivate();\r\n    } catch (ex) {\r\n      console.error('Failed to disconnect:', ex);\r\n    }\r\n  }\r\n\r\n  const checkAndSwitchNetwork = async () => {\r\n    const { ethereum } = window;\r\n    if (!ethereum) {\r\n      console.error(\"No Ethereum provider found\");\r\n      return false;\r\n    }\r\n\r\n    const provider = new ethers.providers.Web3Provider(ethereum);\r\n    const network = await provider.getNetwork();\r\n    \r\n    if (network.chainId !== SEPOLIA_CHAIN_ID) {\r\n      try {\r\n        await switchToSepolia();\r\n        return true;\r\n      } catch (error) {\r\n        console.error('Failed to switch to Sepolia network:', error);\r\n        alert(\"Failed to switch to Sepolia network. Please switch manually in your wallet and try again.\");\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  async function switchToSepolia() {\r\n    const { ethereum } = window;\r\n    if (!ethereum) {\r\n      throw new Error(\"No Ethereum provider found\");\r\n    }\r\n\r\n    try {\r\n      await ethereum.request({\r\n        method: \"wallet_switchEthereumChain\",\r\n        params: [{ chainId: `0x${SEPOLIA_CHAIN_ID.toString(16)}` }],\r\n      });\r\n    } catch (switchError) {\r\n      if (switchError.code === 4902) {\r\n        try {\r\n          await ethereum.request({\r\n            method: \"wallet_addEthereumChain\",\r\n            params: [\r\n              {\r\n                chainId: `0x${SEPOLIA_CHAIN_ID.toString(16)}`,\r\n                chainName: \"Sepolia Test Network\",\r\n                rpcUrls: [\"https://rpc.sepolia.org\"],\r\n                nativeCurrency: {\r\n                  name: \"Sepolia Ether\",\r\n                  symbol: \"SEP\",\r\n                  decimals: 18\r\n                },\r\n                blockExplorerUrls: [\"https://sepolia.etherscan.io\"]\r\n              }\r\n            ],\r\n          });\r\n          await ethereum.request({\r\n            method: \"wallet_switchEthereumChain\",\r\n            params: [{ chainId: `0x${SEPOLIA_CHAIN_ID.toString(16)}` }],\r\n          });\r\n        } catch (addError) {\r\n          throw new Error('Failed to add Sepolia network');\r\n        }\r\n      } else {\r\n        throw switchError;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"placeholder\"></div>\r\n          <h1 className=\"logo-container\">\r\n            <img \r\n              src=\"/gpex_logo_whtie_1000px.webp\" \r\n              alt=\"GPEX Token Exchange\" \r\n              className=\"logo\" \r\n              style={{\r\n                width: '200px',\r\n                height: 'auto'\r\n              }}\r\n            />\r\n          </h1>\r\n          <div className=\"wallet-buttons\">\r\n            {active ? (\r\n              <>\r\n                <button className=\"wallet-address-button\">\r\n                  {account.substring(0, 4)}...{account.substring(account.length - 4)}\r\n                </button>\r\n                <button onClick={disconnect} className=\"disconnect-button\">\r\n                  Disconnect\r\n                </button>\r\n                {chainId !== SEPOLIA_CHAIN_ID && (\r\n                  <button onClick={checkAndSwitchNetwork} className=\"switch-network-button\">\r\n                    Switch to Sepolia\r\n                  </button>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <button onClick={connect} disabled={isConnecting} className=\"connect-wallet-button\">\r\n                {isConnecting ? 'Connecting...' : 'Connect Wallet'}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <main className=\"content-container\">\r\n        <TokenExchange checkAndSwitchNetwork={checkAndSwitchNetwork} switchToSepolia={switchToSepolia} />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}