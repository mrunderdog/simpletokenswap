{"ast":null,"code":"import React,{useEffect,useCallback,useState}from'react';import{useWeb3React}from'@web3-react/core';import{InjectedConnector}from'@web3-react/injected-connector';import{ethers}from'ethers';import TokenExchange from'./components/TokenExchange';import'./App.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export const SEPOLIA_CHAIN_ID=11155111;export const CONTRACT_ADDRESS='0x52E3A076DdA8816eaFBB16c8b5a3b91C8e4E6fa0';export const CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"exchangeETHForToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"exchangeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"exchangeTokenForETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}// 기타 필요한 함수들...\n];const injected=new InjectedConnector({supportedChainIds:[SEPOLIA_CHAIN_ID]});function App(){const{active,account,activate,deactivate,chainId,library}=useWeb3React();const[isConnecting,setIsConnecting]=useState(false);useEffect(()=>{if(window.ethereum){window.ethereum.on('chainChanged',chainId=>{if(parseInt(chainId,16)===SEPOLIA_CHAIN_ID){activate(injected);}});}return()=>{if(window.ethereum&&window.ethereum.removeListener){window.ethereum.removeListener('chainChanged',()=>{});}};},[activate]);useEffect(()=>{if(active&&chainId!==SEPOLIA_CHAIN_ID){checkAndSwitchNetwork();}},[active,chainId]);const handleAccountsChanged=useCallback(accounts=>{if(accounts.length>0&&account!==accounts[0]){activate(injected);}else{deactivate();}},[account,activate,deactivate]);useEffect(()=>{const{ethereum}=window;if(ethereum&&ethereum.on){ethereum.on('accountsChanged',handleAccountsChanged);}return()=>{if(ethereum&&ethereum.removeListener){ethereum.removeListener('accountsChanged',handleAccountsChanged);}};},[handleAccountsChanged]);async function connect(){if(isConnecting)return;setIsConnecting(true);try{await activate(injected,undefined,true);const provider=new ethers.providers.Web3Provider(window.ethereum);const network=await provider.getNetwork();const connectedChainId=network.chainId;if(connectedChainId!==SEPOLIA_CHAIN_ID){console.log('Connected to unsupported network. Attempting to switch to Sepolia...');const userConfirmed=window.confirm(\"This application requires Sepolia network. Do you want to switch to Sepolia?\");if(userConfirmed){const switched=await checkAndSwitchNetwork();if(!switched){console.log('Failed to switch to Sepolia');alert(\"Failed to switch to Sepolia network. Please switch manually in your wallet and try connecting again.\");await deactivate();}else{console.log('Successfully switched to Sepolia');}}else{console.log('User declined to switch network');alert(\"This application requires Sepolia network. Please switch to Sepolia and try connecting again.\");await deactivate();}}else{console.log('Already on Sepolia network');}}catch(ex){console.error('Failed to connect:',ex);if(ex.name==='UnsupportedChainIdError'){const userConfirmed=window.confirm(\"You're connected to an unsupported network. Do you want to switch to Sepolia?\");if(userConfirmed){const switched=await checkAndSwitchNetwork();if(!switched){alert(\"Failed to switch to Sepolia network. Please switch manually in your wallet and try connecting again.\");}}else{alert(\"This application requires Sepolia network. Please switch to Sepolia and try connecting again.\");}}else{alert(\"Failed to connect. Please make sure you have MetaMask installed and try again.\");}}finally{setIsConnecting(false);}}async function disconnect(){try{deactivate();}catch(ex){console.error('Failed to disconnect:',ex);}}const checkAndSwitchNetwork=async()=>{const{ethereum}=window;if(!ethereum){console.error(\"No Ethereum provider found\");return false;}try{await switchToSepolia();return true;}catch(error){console.error('Failed to switch to Sepolia network:',error);alert(\"Failed to switch to Sepolia network. Please switch manually in your wallet and try again.\");return false;}};async function switchToSepolia(){const{ethereum}=window;if(!ethereum){throw new Error(\"No Ethereum provider found\");}try{await ethereum.request({method:\"wallet_switchEthereumChain\",params:[{chainId:`0x${SEPOLIA_CHAIN_ID.toString(16)}`}]});}catch(switchError){if(switchError.code===4902){try{await ethereum.request({method:\"wallet_addEthereumChain\",params:[{chainId:`0x${SEPOLIA_CHAIN_ID.toString(16)}`,chainName:\"Sepolia Test Network\",rpcUrls:[\"https://rpc.sepolia.org\"],nativeCurrency:{name:\"Sepolia Ether\",symbol:\"SEP\",decimals:18},blockExplorerUrls:[\"https://sepolia.etherscan.io\"]}]});await ethereum.request({method:\"wallet_switchEthereumChain\",params:[{chainId:`0x${SEPOLIA_CHAIN_ID.toString(16)}`}]});}catch(addError){throw new Error('Failed to add Sepolia network');}}else{throw switchError;}}}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"App-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"header-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"placeholder\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"logo-container\",children:/*#__PURE__*/_jsx(\"img\",{src:\"/gpex_logo_whtie_1000px.webp\",alt:\"GPEX Token Exchange\",className:\"logo\",style:{width:'200px',height:'auto'}})}),/*#__PURE__*/_jsx(\"div\",{className:\"wallet-buttons\",children:active?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"button\",{className:\"wallet-address-button\",children:[account.substring(0,4),\"...\",account.substring(account.length-4)]}),/*#__PURE__*/_jsx(\"button\",{onClick:disconnect,className:\"disconnect-button\",children:\"Disconnect\"}),chainId!==SEPOLIA_CHAIN_ID&&/*#__PURE__*/_jsx(\"button\",{onClick:checkAndSwitchNetwork,className:\"switch-network-button\",children:\"Switch to Sepolia\"})]}):/*#__PURE__*/_jsx(\"button\",{onClick:connect,disabled:isConnecting,className:\"connect-wallet-button\",children:isConnecting?'Connecting...':'Connect Wallet'})})]})}),/*#__PURE__*/_jsx(\"main\",{className:\"content-container\",children:/*#__PURE__*/_jsx(TokenExchange,{checkAndSwitchNetwork:checkAndSwitchNetwork,switchToSepolia:switchToSepolia})})]});}export default App;","map":{"version":3,"names":["React","useEffect","useCallback","useState","useWeb3React","InjectedConnector","ethers","TokenExchange","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SEPOLIA_CHAIN_ID","CONTRACT_ADDRESS","CONTRACT_ABI","injected","supportedChainIds","App","active","account","activate","deactivate","chainId","library","isConnecting","setIsConnecting","window","ethereum","on","parseInt","removeListener","checkAndSwitchNetwork","handleAccountsChanged","accounts","length","connect","undefined","provider","providers","Web3Provider","network","getNetwork","connectedChainId","console","log","userConfirmed","confirm","switched","alert","ex","error","name","disconnect","switchToSepolia","Error","request","method","params","toString","switchError","code","chainName","rpcUrls","nativeCurrency","symbol","decimals","blockExplorerUrls","addError","className","children","src","alt","style","width","height","substring","onClick","disabled"],"sources":["C:/Cursor/Defisite/src/App.js"],"sourcesContent":["import React, { useEffect, useCallback, useState } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { InjectedConnector } from '@web3-react/injected-connector';\r\nimport { ethers } from 'ethers';\r\nimport TokenExchange from './components/TokenExchange';\r\nimport './App.css';\r\n\r\nexport const SEPOLIA_CHAIN_ID = 11155111;\r\nexport const CONTRACT_ADDRESS = '0x52E3A076DdA8816eaFBB16c8b5a3b91C8e4E6fa0';\r\nexport const CONTRACT_ABI = [\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"tokenOut\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"exchangeETHForToken\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"payable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"tokenIn\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"tokenOut\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amountIn\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"exchangeTokens\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"tokenIn\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amountIn\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"exchangeTokenForETH\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n\t// 기타 필요한 함수들...\r\n];\r\n\r\nconst injected = new InjectedConnector({\r\n  supportedChainIds: [SEPOLIA_CHAIN_ID]\r\n});\r\n\r\nfunction App() {\r\n  const { active, account, activate, deactivate, chainId, library } = useWeb3React();\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (window.ethereum) {\r\n      window.ethereum.on('chainChanged', (chainId) => {\r\n        if (parseInt(chainId, 16) === SEPOLIA_CHAIN_ID) {\r\n          activate(injected);\r\n        }\r\n      });\r\n    }\r\n    return () => {\r\n      if (window.ethereum && window.ethereum.removeListener) {\r\n        window.ethereum.removeListener('chainChanged', () => {});\r\n      }\r\n    };\r\n  }, [activate]);\r\n\r\n  useEffect(() => {\r\n    if (active && chainId !== SEPOLIA_CHAIN_ID) {\r\n      checkAndSwitchNetwork();\r\n    }\r\n  }, [active, chainId]);\r\n\r\n  const handleAccountsChanged = useCallback((accounts) => {\r\n    if (accounts.length > 0 && account !== accounts[0]) {\r\n      activate(injected);\r\n    } else {\r\n      deactivate();\r\n    }\r\n  }, [account, activate, deactivate]);\r\n\r\n  useEffect(() => {\r\n    const { ethereum } = window;\r\n    if (ethereum && ethereum.on) {\r\n      ethereum.on('accountsChanged', handleAccountsChanged);\r\n    }\r\n\r\n    return () => {\r\n      if (ethereum && ethereum.removeListener) {\r\n        ethereum.removeListener('accountsChanged', handleAccountsChanged);\r\n      }\r\n    };\r\n  }, [handleAccountsChanged]);\r\n\r\n  async function connect() {\r\n    if (isConnecting) return;\r\n    setIsConnecting(true);\r\n    try {\r\n      await activate(injected, undefined, true);\r\n      \r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const network = await provider.getNetwork();\r\n      const connectedChainId = network.chainId;\r\n      \r\n      if (connectedChainId !== SEPOLIA_CHAIN_ID) {\r\n        console.log('Connected to unsupported network. Attempting to switch to Sepolia...');\r\n        const userConfirmed = window.confirm(\"This application requires Sepolia network. Do you want to switch to Sepolia?\");\r\n        if (userConfirmed) {\r\n          const switched = await checkAndSwitchNetwork();\r\n          if (!switched) {\r\n            console.log('Failed to switch to Sepolia');\r\n            alert(\"Failed to switch to Sepolia network. Please switch manually in your wallet and try connecting again.\");\r\n            await deactivate();\r\n          } else {\r\n            console.log('Successfully switched to Sepolia');\r\n          }\r\n        } else {\r\n          console.log('User declined to switch network');\r\n          alert(\"This application requires Sepolia network. Please switch to Sepolia and try connecting again.\");\r\n          await deactivate();\r\n        }\r\n      } else {\r\n        console.log('Already on Sepolia network');\r\n      }\r\n    } catch (ex) {\r\n      console.error('Failed to connect:', ex);\r\n      if (ex.name === 'UnsupportedChainIdError') {\r\n        const userConfirmed = window.confirm(\"You're connected to an unsupported network. Do you want to switch to Sepolia?\");\r\n        if (userConfirmed) {\r\n          const switched = await checkAndSwitchNetwork();\r\n          if (!switched) {\r\n            alert(\"Failed to switch to Sepolia network. Please switch manually in your wallet and try connecting again.\");\r\n          }\r\n        } else {\r\n          alert(\"This application requires Sepolia network. Please switch to Sepolia and try connecting again.\");\r\n        }\r\n      } else {\r\n        alert(\"Failed to connect. Please make sure you have MetaMask installed and try again.\");\r\n      }\r\n    } finally {\r\n      setIsConnecting(false);\r\n    }\r\n  }\r\n\r\n  async function disconnect() {\r\n    try {\r\n      deactivate();\r\n    } catch (ex) {\r\n      console.error('Failed to disconnect:', ex);\r\n    }\r\n  }\r\n\r\n  const checkAndSwitchNetwork = async () => {\r\n    const { ethereum } = window;\r\n    if (!ethereum) {\r\n      console.error(\"No Ethereum provider found\");\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      await switchToSepolia();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to switch to Sepolia network:', error);\r\n      alert(\"Failed to switch to Sepolia network. Please switch manually in your wallet and try again.\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  async function switchToSepolia() {\r\n    const { ethereum } = window;\r\n    if (!ethereum) {\r\n      throw new Error(\"No Ethereum provider found\");\r\n    }\r\n\r\n    try {\r\n      await ethereum.request({\r\n        method: \"wallet_switchEthereumChain\",\r\n        params: [{ chainId: `0x${SEPOLIA_CHAIN_ID.toString(16)}` }],\r\n      });\r\n    } catch (switchError) {\r\n      if (switchError.code === 4902) {\r\n        try {\r\n          await ethereum.request({\r\n            method: \"wallet_addEthereumChain\",\r\n            params: [\r\n              {\r\n                chainId: `0x${SEPOLIA_CHAIN_ID.toString(16)}`,\r\n                chainName: \"Sepolia Test Network\",\r\n                rpcUrls: [\"https://rpc.sepolia.org\"],\r\n                nativeCurrency: {\r\n                  name: \"Sepolia Ether\",\r\n                  symbol: \"SEP\",\r\n                  decimals: 18\r\n                },\r\n                blockExplorerUrls: [\"https://sepolia.etherscan.io\"]\r\n              }\r\n            ],\r\n          });\r\n          await ethereum.request({\r\n            method: \"wallet_switchEthereumChain\",\r\n            params: [{ chainId: `0x${SEPOLIA_CHAIN_ID.toString(16)}` }],\r\n          });\r\n        } catch (addError) {\r\n          throw new Error('Failed to add Sepolia network');\r\n        }\r\n      } else {\r\n        throw switchError;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"placeholder\"></div>\r\n          <h1 className=\"logo-container\">\r\n            <img \r\n              src=\"/gpex_logo_whtie_1000px.webp\" \r\n              alt=\"GPEX Token Exchange\" \r\n              className=\"logo\" \r\n              style={{\r\n                width: '200px',\r\n                height: 'auto'\r\n              }}\r\n            />\r\n          </h1>\r\n          <div className=\"wallet-buttons\">\r\n            {active ? (\r\n              <>\r\n                <button className=\"wallet-address-button\">\r\n                  {account.substring(0, 4)}...{account.substring(account.length - 4)}\r\n                </button>\r\n                <button onClick={disconnect} className=\"disconnect-button\">\r\n                  Disconnect\r\n                </button>\r\n                {chainId !== SEPOLIA_CHAIN_ID && (\r\n                  <button onClick={checkAndSwitchNetwork} className=\"switch-network-button\">\r\n                    Switch to Sepolia\r\n                  </button>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <button onClick={connect} disabled={isConnecting} className=\"connect-wallet-button\">\r\n                {isConnecting ? 'Connecting...' : 'Connect Wallet'}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <main className=\"content-container\">\r\n        <TokenExchange checkAndSwitchNetwork={checkAndSwitchNetwork} switchToSepolia={switchToSepolia} />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}