{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursor\\\\Defisite\\\\src\\\\components\\\\TokenExchange.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONTRACT_ADDRESS = '0x779b95281AdBB3DAE84E7fF4Ad3A0A3bD475235e';\nconst CONTRACT_ABI = [\n  // ABI를 여기에 붙여넣으세요. 간결성을 위해 여기서는 생략했습니다.\n];\nfunction TokenExchange() {\n  _s();\n  const {\n    active,\n    library,\n    account\n  } = useWeb3React();\n  const [amount, setAmount] = useState('');\n  const handleExchange = async () => {\n    if (!active || !library) {\n      alert('Please connect your wallet first');\n      return;\n    }\n    try {\n      const signer = library.getSigner();\n      const contract = new ethers.Contract(CONTRACT_ADDRESS, CONTRACT_ABI, signer);\n\n      // ETH를 Wei로 변환\n      const amountInWei = ethers.utils.parseEther(amount);\n\n      // 트랜잭션 실행\n      const tx = await contract.exchangeETHForGKIP({\n        value: amountInWei\n      });\n\n      // 트랜잭션 완료 대기\n      await tx.wait();\n      alert('Exchange successful!');\n    } catch (error) {\n      console.error('Exchange failed:', error);\n      alert('Exchange failed. Please check console for details.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exchange-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Exchange ETH for gKIP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: amount,\n      onChange: e => setAmount(e.target.value),\n      placeholder: \"Amount in ETH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleExchange,\n      disabled: !active,\n      children: \"Exchange\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), active && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected account: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(TokenExchange, \"5RecK/EWlZRjYhgaor2/YyWEyBE=\", false, function () {\n  return [useWeb3React];\n});\n_c = TokenExchange;\nexport default TokenExchange;\nvar _c;\n$RefreshReg$(_c, \"TokenExchange\");","map":{"version":3,"names":["React","useState","useWeb3React","ethers","jsxDEV","_jsxDEV","CONTRACT_ADDRESS","CONTRACT_ABI","TokenExchange","_s","active","library","account","amount","setAmount","handleExchange","alert","signer","getSigner","contract","Contract","amountInWei","utils","parseEther","tx","exchangeETHForGKIP","value","wait","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Cursor/Defisite/src/components/TokenExchange.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { ethers } from 'ethers';\r\n\r\nconst CONTRACT_ADDRESS = '0x779b95281AdBB3DAE84E7fF4Ad3A0A3bD475235e';\r\nconst CONTRACT_ABI = [\r\n  // ABI를 여기에 붙여넣으세요. 간결성을 위해 여기서는 생략했습니다.\r\n];\r\n\r\nfunction TokenExchange() {\r\n  const { active, library, account } = useWeb3React();\r\n  const [amount, setAmount] = useState('');\r\n\r\n  const handleExchange = async () => {\r\n    if (!active || !library) {\r\n      alert('Please connect your wallet first');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const signer = library.getSigner();\r\n      const contract = new ethers.Contract(CONTRACT_ADDRESS, CONTRACT_ABI, signer);\r\n\r\n      // ETH를 Wei로 변환\r\n      const amountInWei = ethers.utils.parseEther(amount);\r\n\r\n      // 트랜잭션 실행\r\n      const tx = await contract.exchangeETHForGKIP({ value: amountInWei });\r\n      \r\n      // 트랜잭션 완료 대기\r\n      await tx.wait();\r\n\r\n      alert('Exchange successful!');\r\n    } catch (error) {\r\n      console.error('Exchange failed:', error);\r\n      alert('Exchange failed. Please check console for details.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"exchange-container\">\r\n      <h2>Exchange ETH for gKIP</h2>\r\n      <input\r\n        type=\"number\"\r\n        value={amount}\r\n        onChange={(e) => setAmount(e.target.value)}\r\n        placeholder=\"Amount in ETH\"\r\n      />\r\n      <button onClick={handleExchange} disabled={!active}>\r\n        Exchange\r\n      </button>\r\n      {active && <p>Connected account: {account}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TokenExchange;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,gBAAgB,GAAG,4CAA4C;AACrE,MAAMC,YAAY,GAAG;EACnB;AAAA,CACD;AAED,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGV,YAAY,CAAC,CAAC;EACnD,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMc,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACL,MAAM,IAAI,CAACC,OAAO,EAAE;MACvBK,KAAK,CAAC,kCAAkC,CAAC;MACzC;IACF;IAEA,IAAI;MACF,MAAMC,MAAM,GAAGN,OAAO,CAACO,SAAS,CAAC,CAAC;MAClC,MAAMC,QAAQ,GAAG,IAAIhB,MAAM,CAACiB,QAAQ,CAACd,gBAAgB,EAAEC,YAAY,EAAEU,MAAM,CAAC;;MAE5E;MACA,MAAMI,WAAW,GAAGlB,MAAM,CAACmB,KAAK,CAACC,UAAU,CAACV,MAAM,CAAC;;MAEnD;MACA,MAAMW,EAAE,GAAG,MAAML,QAAQ,CAACM,kBAAkB,CAAC;QAAEC,KAAK,EAAEL;MAAY,CAAC,CAAC;;MAEpE;MACA,MAAMG,EAAE,CAACG,IAAI,CAAC,CAAC;MAEfX,KAAK,CAAC,sBAAsB,CAAC;IAC/B,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxCZ,KAAK,CAAC,oDAAoD,CAAC;IAC7D;EACF,CAAC;EAED,oBACEX,OAAA;IAAKyB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjC1B,OAAA;MAAA0B,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9B9B,OAAA;MACE+B,IAAI,EAAC,QAAQ;MACbV,KAAK,EAAEb,MAAO;MACdwB,QAAQ,EAAGC,CAAC,IAAKxB,SAAS,CAACwB,CAAC,CAACC,MAAM,CAACb,KAAK,CAAE;MAC3Cc,WAAW,EAAC;IAAe;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACF9B,OAAA;MAAQoC,OAAO,EAAE1B,cAAe;MAAC2B,QAAQ,EAAE,CAAChC,MAAO;MAAAqB,QAAA,EAAC;IAEpD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRzB,MAAM,iBAAIL,OAAA;MAAA0B,QAAA,GAAG,qBAAmB,EAACnB,OAAO;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV;AAAC1B,EAAA,CA7CQD,aAAa;EAAA,QACiBN,YAAY;AAAA;AAAAyC,EAAA,GAD1CnC,aAAa;AA+CtB,eAAeA,aAAa;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}