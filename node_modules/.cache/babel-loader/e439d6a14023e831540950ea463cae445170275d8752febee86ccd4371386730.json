{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursor\\\\Defisite\\\\src\\\\components\\\\WalletConnect.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst injected = new InjectedConnector({\n  supportedChainIds: [1] // Ethereum Mainnet\n});\nfunction WalletConnect() {\n  _s();\n  const {\n    activate,\n    deactivate,\n    active,\n    account\n  } = useWeb3React();\n  const connectWallet = async () => {\n    try {\n      await activate(injected);\n    } catch (error) {\n      console.error('Failed to connect wallet:', error);\n    }\n  };\n  const disconnectWallet = () => {\n    try {\n      deactivate();\n    } catch (error) {\n      console.error('Failed to disconnect wallet:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: active ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected: \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: disconnectWallet,\n        children: \"Disconnect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect MetaMask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(WalletConnect, \"Aj5j2tjG2hbwh56L/Q6/P6eVeYg=\", false, function () {\n  return [useWeb3React];\n});\n_c = WalletConnect;\nexport default WalletConnect;\nvar _c;\n$RefreshReg$(_c, \"WalletConnect\");","map":{"version":3,"names":["React","useWeb3React","InjectedConnector","jsxDEV","_jsxDEV","injected","supportedChainIds","WalletConnect","_s","activate","deactivate","active","account","connectWallet","error","console","disconnectWallet","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Cursor/Defisite/src/components/WalletConnect.js"],"sourcesContent":["import React from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { InjectedConnector } from '@web3-react/injected-connector';\r\n\r\nconst injected = new InjectedConnector({\r\n  supportedChainIds: [1], // Ethereum Mainnet\r\n});\r\n\r\nfunction WalletConnect() {\r\n  const { activate, deactivate, active, account } = useWeb3React();\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      await activate(injected);\r\n    } catch (error) {\r\n      console.error('Failed to connect wallet:', error);\r\n    }\r\n  };\r\n\r\n  const disconnectWallet = () => {\r\n    try {\r\n      deactivate();\r\n    } catch (error) {\r\n      console.error('Failed to disconnect wallet:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {active ? (\r\n        <div>\r\n          <p>Connected: {account}</p>\r\n          <button onClick={disconnectWallet}>Disconnect Wallet</button>\r\n        </div>\r\n      ) : (\r\n        <button onClick={connectWallet}>Connect MetaMask</button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WalletConnect;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,QAAQ,GAAG,IAAIH,iBAAiB,CAAC;EACrCI,iBAAiB,EAAE,CAAC,CAAC,CAAC,CAAE;AAC1B,CAAC,CAAC;AAEF,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC,QAAQ;IAAEC,UAAU;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAGX,YAAY,CAAC,CAAC;EAEhE,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMJ,QAAQ,CAACJ,QAAQ,CAAC;IAC1B,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI;MACFN,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,oBACEV,OAAA;IAAAa,QAAA,EACGN,MAAM,gBACLP,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,GAAG,aAAW,EAACL,OAAO;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BjB,OAAA;QAAQkB,OAAO,EAAEN,gBAAiB;QAAAC,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,gBAENjB,OAAA;MAAQkB,OAAO,EAAET,aAAc;MAAAI,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EACzD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACb,EAAA,CA/BQD,aAAa;EAAA,QAC8BN,YAAY;AAAA;AAAAsB,EAAA,GADvDhB,aAAa;AAiCtB,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}