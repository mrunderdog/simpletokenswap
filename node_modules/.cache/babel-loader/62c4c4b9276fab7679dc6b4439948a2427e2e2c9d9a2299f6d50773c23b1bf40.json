{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursor\\\\Defisite\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport TokenExchange from './components/TokenExchange';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SEPOLIA_CHAIN_ID = 11155111;\nconst injected = new InjectedConnector({\n  supportedChainIds: [SEPOLIA_CHAIN_ID]\n});\nfunction App() {\n  _s();\n  const {\n    active,\n    account,\n    activate,\n    deactivate,\n    chainId,\n    library\n  } = useWeb3React();\n  const [isConnecting, setIsConnecting] = useState(false);\n  useEffect(() => {\n    if (active && library && chainId !== SEPOLIA_CHAIN_ID) {\n      checkAndSwitchNetwork();\n    }\n  }, [active, chainId, library]);\n  const handleAccountsChanged = useCallback(accounts => {\n    if (accounts.length > 0 && account !== accounts[0]) {\n      activate(injected);\n    } else {\n      deactivate();\n    }\n  }, [account, activate, deactivate]);\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', handleAccountsChanged);\n    }\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n      }\n    };\n  }, [handleAccountsChanged]);\n  async function connect() {\n    if (isConnecting) return;\n    setIsConnecting(true);\n    try {\n      console.log('Activating injected connector...');\n      await activate(injected);\n      console.log('Injected connector activated');\n      console.log('Waiting for library initialization...');\n      let attempts = 0;\n      while (!library && attempts < 50) {\n        await new Promise(resolve => setTimeout(resolve, 100));\n        attempts++;\n      }\n      if (!library) {\n        throw new Error('Library initialization timeout');\n      }\n      console.log('Library initialized:', library);\n      const network = await library.getNetwork();\n      console.log('Network:', network);\n      const connectedChainId = network.chainId;\n      console.log('Connected chainId:', connectedChainId);\n      if (connectedChainId !== SEPOLIA_CHAIN_ID) {\n        console.log('Switching to Sepolia network...');\n        const switched = await checkAndSwitchNetwork();\n        if (!switched) {\n          console.log('Failed to switch to Sepolia');\n          alert(\"This application requires Sepolia network. Please switch to Sepolia and try connecting again.\");\n          await deactivate();\n        } else {\n          console.log('Successfully switched to Sepolia');\n        }\n      } else {\n        console.log('Already on Sepolia network');\n      }\n    } catch (ex) {\n      console.error('Failed to connect:', ex);\n      if (ex.name === 'NoEthereumProviderError') {\n        alert(\"No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.\");\n      } else if (ex.name === 'UnsupportedChainIdError') {\n        alert(\"You're connected to an unsupported network.\");\n      } else {\n        alert(\"An unknown error occurred. Check the console for more details.\");\n      }\n      await deactivate();\n    } finally {\n      setIsConnecting(false);\n    }\n  }\n  async function disconnect() {\n    try {\n      deactivate();\n    } catch (ex) {\n      console.error('Failed to disconnect:', ex);\n    }\n  }\n  async function switchToSepolia() {\n    if (!library || !library.provider) {\n      console.error(\"Wallet is not connected. Please connect your wallet first.\");\n      return false;\n    }\n    const provider = library.provider;\n    try {\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: `0x${SEPOLIA_CHAIN_ID.toString(16)}`\n        }]\n      });\n      return true;\n    } catch (switchError) {\n      if (switchError.code === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [{\n              chainId: `0x${SEPOLIA_CHAIN_ID.toString(16)}`,\n              chainName: \"Sepolia Test Network\",\n              rpcUrls: [\"https://rpc.sepolia.org\"],\n              nativeCurrency: {\n                name: \"Sepolia Ether\",\n                symbol: \"SEP\",\n                decimals: 18\n              },\n              blockExplorerUrls: [\"https://sepolia.etherscan.io\"]\n            }]\n          });\n          return true;\n        } catch (addError) {\n          console.error('Failed to add Sepolia network:', addError);\n        }\n      } else {\n        console.error('Failed to switch to Sepolia network:', switchError);\n      }\n    }\n    return false;\n  }\n  const checkAndSwitchNetwork = async () => {\n    if (chainId !== SEPOLIA_CHAIN_ID) {\n      const userConfirmed = window.confirm(\"This application requires Sepolia network. Do you want to switch to Sepolia?\");\n      if (userConfirmed) {\n        const switched = await switchToSepolia();\n        if (!switched) {\n          alert(\"Failed to switch to Sepolia network. Please switch manually in your wallet and try again.\");\n        }\n        return switched;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"logo-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/gpex_logo_whtie_1000px.webp\",\n            alt: \"GPEX Token Exchange\",\n            className: \"logo\",\n            style: {\n              width: '200px',\n              height: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-buttons\",\n          children: active ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"wallet-address-button\",\n              children: [account.substring(0, 4), \"...\", account.substring(account.length - 4)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: disconnect,\n              className: \"disconnect-button\",\n              children: \"Disconnect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), chainId !== SEPOLIA_CHAIN_ID && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: checkAndSwitchNetwork,\n              className: \"switch-network-button\",\n              children: \"Switch to Sepolia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: connect,\n            disabled: isConnecting,\n            className: \"connect-wallet-button\",\n            children: isConnecting ? 'Connecting...' : 'Connect Wallet'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content-container\",\n      children: /*#__PURE__*/_jsxDEV(TokenExchange, {\n        checkAndSwitchNetwork: checkAndSwitchNetwork\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"P3BNZyjWv8YXKHyYQDDFET1w0c8=\", false, function () {\n  return [useWeb3React];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useCallback","useState","useWeb3React","InjectedConnector","TokenExchange","jsxDEV","_jsxDEV","Fragment","_Fragment","SEPOLIA_CHAIN_ID","injected","supportedChainIds","App","_s","active","account","activate","deactivate","chainId","library","isConnecting","setIsConnecting","checkAndSwitchNetwork","handleAccountsChanged","accounts","length","window","ethereum","on","removeListener","connect","console","log","attempts","Promise","resolve","setTimeout","Error","network","getNetwork","connectedChainId","switched","alert","ex","error","name","disconnect","switchToSepolia","provider","request","method","params","toString","switchError","code","chainName","rpcUrls","nativeCurrency","symbol","decimals","blockExplorerUrls","addError","userConfirmed","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","width","height","substring","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Cursor/Defisite/src/App.js"],"sourcesContent":["import React, { useEffect, useCallback, useState } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { InjectedConnector } from '@web3-react/injected-connector';\r\nimport TokenExchange from './components/TokenExchange';\r\nimport './App.css';\r\n\r\nconst SEPOLIA_CHAIN_ID = 11155111;\r\n\r\nconst injected = new InjectedConnector({\r\n  supportedChainIds: [SEPOLIA_CHAIN_ID]\r\n});\r\n\r\nfunction App() {\r\n  const { active, account, activate, deactivate, chainId, library } = useWeb3React();\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (active && library && chainId !== SEPOLIA_CHAIN_ID) {\r\n      checkAndSwitchNetwork();\r\n    }\r\n  }, [active, chainId, library]);\r\n\r\n  const handleAccountsChanged = useCallback((accounts) => {\r\n    if (accounts.length > 0 && account !== accounts[0]) {\r\n      activate(injected);\r\n    } else {\r\n      deactivate();\r\n    }\r\n  }, [account, activate, deactivate]);\r\n\r\n  useEffect(() => {\r\n    if (window.ethereum) {\r\n      window.ethereum.on('accountsChanged', handleAccountsChanged);\r\n    }\r\n\r\n    return () => {\r\n      if (window.ethereum) {\r\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\r\n      }\r\n    };\r\n  }, [handleAccountsChanged]);\r\n\r\n  async function connect() {\r\n    if (isConnecting) return;\r\n    setIsConnecting(true);\r\n    try {\r\n      console.log('Activating injected connector...');\r\n      await activate(injected);\r\n      console.log('Injected connector activated');\r\n      \r\n      console.log('Waiting for library initialization...');\r\n      let attempts = 0;\r\n      while (!library && attempts < 50) {\r\n        await new Promise(resolve => setTimeout(resolve, 100));\r\n        attempts++;\r\n      }\r\n\r\n      if (!library) {\r\n        throw new Error('Library initialization timeout');\r\n      }\r\n      console.log('Library initialized:', library);\r\n\r\n      const network = await library.getNetwork();\r\n      console.log('Network:', network);\r\n      const connectedChainId = network.chainId;\r\n      console.log('Connected chainId:', connectedChainId);\r\n      \r\n      if (connectedChainId !== SEPOLIA_CHAIN_ID) {\r\n        console.log('Switching to Sepolia network...');\r\n        const switched = await checkAndSwitchNetwork();\r\n        if (!switched) {\r\n          console.log('Failed to switch to Sepolia');\r\n          alert(\"This application requires Sepolia network. Please switch to Sepolia and try connecting again.\");\r\n          await deactivate();\r\n        } else {\r\n          console.log('Successfully switched to Sepolia');\r\n        }\r\n      } else {\r\n        console.log('Already on Sepolia network');\r\n      }\r\n    } catch (ex) {\r\n      console.error('Failed to connect:', ex);\r\n      if (ex.name === 'NoEthereumProviderError') {\r\n        alert(\"No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.\");\r\n      } else if (ex.name === 'UnsupportedChainIdError') {\r\n        alert(\"You're connected to an unsupported network.\");\r\n      } else {\r\n        alert(\"An unknown error occurred. Check the console for more details.\");\r\n      }\r\n      await deactivate();\r\n    } finally {\r\n      setIsConnecting(false);\r\n    }\r\n  }\r\n\r\n  async function disconnect() {\r\n    try {\r\n      deactivate();\r\n    } catch (ex) {\r\n      console.error('Failed to disconnect:', ex);\r\n    }\r\n  }\r\n\r\n  async function switchToSepolia() {\r\n    if (!library || !library.provider) {\r\n      console.error(\"Wallet is not connected. Please connect your wallet first.\");\r\n      return false;\r\n    }\r\n\r\n    const provider = library.provider;\r\n\r\n    try {\r\n      await provider.request({\r\n        method: \"wallet_switchEthereumChain\",\r\n        params: [{ chainId: `0x${SEPOLIA_CHAIN_ID.toString(16)}` }],\r\n      });\r\n      return true;\r\n    } catch (switchError) {\r\n      if (switchError.code === 4902) {\r\n        try {\r\n          await provider.request({\r\n            method: \"wallet_addEthereumChain\",\r\n            params: [\r\n              {\r\n                chainId: `0x${SEPOLIA_CHAIN_ID.toString(16)}`,\r\n                chainName: \"Sepolia Test Network\",\r\n                rpcUrls: [\"https://rpc.sepolia.org\"],\r\n                nativeCurrency: {\r\n                  name: \"Sepolia Ether\",\r\n                  symbol: \"SEP\",\r\n                  decimals: 18\r\n                },\r\n                blockExplorerUrls: [\"https://sepolia.etherscan.io\"]\r\n              }\r\n            ],\r\n          });\r\n          return true;\r\n        } catch (addError) {\r\n          console.error('Failed to add Sepolia network:', addError);\r\n        }\r\n      } else {\r\n        console.error('Failed to switch to Sepolia network:', switchError);\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  const checkAndSwitchNetwork = async () => {\r\n    if (chainId !== SEPOLIA_CHAIN_ID) {\r\n      const userConfirmed = window.confirm(\"This application requires Sepolia network. Do you want to switch to Sepolia?\");\r\n      if (userConfirmed) {\r\n        const switched = await switchToSepolia();\r\n        if (!switched) {\r\n          alert(\"Failed to switch to Sepolia network. Please switch manually in your wallet and try again.\");\r\n        }\r\n        return switched;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"placeholder\"></div>\r\n          <h1 className=\"logo-container\">\r\n            <img \r\n              src=\"/gpex_logo_whtie_1000px.webp\" \r\n              alt=\"GPEX Token Exchange\" \r\n              className=\"logo\" \r\n              style={{\r\n                width: '200px',\r\n                height: 'auto'\r\n              }}\r\n            />\r\n          </h1>\r\n          <div className=\"wallet-buttons\">\r\n            {active ? (\r\n              <>\r\n                <button className=\"wallet-address-button\">\r\n                  {account.substring(0, 4)}...{account.substring(account.length - 4)}\r\n                </button>\r\n                <button onClick={disconnect} className=\"disconnect-button\">\r\n                  Disconnect\r\n                </button>\r\n                {chainId !== SEPOLIA_CHAIN_ID && (\r\n                  <button onClick={checkAndSwitchNetwork} className=\"switch-network-button\">\r\n                    Switch to Sepolia\r\n                  </button>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <button onClick={connect} disabled={isConnecting} className=\"connect-wallet-button\">\r\n                {isConnecting ? 'Connecting...' : 'Connect Wallet'}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <main className=\"content-container\">\r\n        <TokenExchange checkAndSwitchNetwork={checkAndSwitchNetwork} />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}