{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursor\\\\Defisite\\\\src\\\\components\\\\WalletConnect.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst injected = new InjectedConnector({\n  supportedChainIds: [11155111] // Sepolia 테스트넷 Chain ID\n});\nfunction WalletConnect() {\n  _s();\n  const {\n    activate,\n    deactivate,\n    active,\n    account,\n    chainId,\n    library\n  } = useWeb3React();\n  const connectWallet = async () => {\n    try {\n      await activate(injected);\n    } catch (error) {\n      console.error('Failed to connect wallet:', error);\n    }\n  };\n  const disconnectWallet = () => {\n    try {\n      deactivate();\n    } catch (error) {\n      console.error('Failed to disconnect wallet:', error);\n    }\n  };\n  const switchToSepolia = async () => {\n    if (!library || !library.provider.request) {\n      console.error('No provider available');\n      return;\n    }\n    try {\n      await library.provider.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{\n          chainId: '0xaa36a7'\n        }] // Sepolia의 chainId (16진수)\n      });\n    } catch (switchError) {\n      // 사용자가 Sepolia 네트워크를 추가하지 않은 경우\n      if (switchError.code === 4902) {\n        try {\n          await library.provider.request({\n            method: 'wallet_addEthereumChain',\n            params: [{\n              chainId: '0xaa36a7',\n              chainName: 'Sepolia Test Network',\n              nativeCurrency: {\n                name: 'Sepolia Ether',\n                symbol: 'SEP',\n                decimals: 18\n              },\n              rpcUrls: ['https://sepolia.infura.io/v3/YOUR-PROJECT-ID'],\n              blockExplorerUrls: ['https://sepolia.etherscan.io']\n            }]\n          });\n        } catch (addError) {\n          console.error('Failed to add Sepolia network:', addError);\n        }\n      } else {\n        console.error('Failed to switch to Sepolia network:', switchError);\n      }\n    }\n  };\n  useEffect(() => {\n    if (active && chainId !== 11155111) {\n      const confirmSwitch = window.confirm('Please switch to Sepolia Test Network. Click OK to switch.');\n      if (confirmSwitch) {\n        switchToSepolia();\n      }\n    }\n  }, [active, chainId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: active ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected: \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Network: \", chainId === 11155111 ? 'Sepolia Test Network' : 'Wrong Network']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: disconnectWallet,\n        children: \"Disconnect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), chainId !== 11155111 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: switchToSepolia,\n        children: \"Switch to Sepolia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect MetaMask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(WalletConnect, \"nZg3CFxivYmu6alxEL4Gcam26Tk=\", false, function () {\n  return [useWeb3React];\n});\n_c = WalletConnect;\nexport default WalletConnect;\nvar _c;\n$RefreshReg$(_c, \"WalletConnect\");","map":{"version":3,"names":["React","useEffect","useWeb3React","InjectedConnector","jsxDEV","_jsxDEV","injected","supportedChainIds","WalletConnect","_s","activate","deactivate","active","account","chainId","library","connectWallet","error","console","disconnectWallet","switchToSepolia","provider","request","method","params","switchError","code","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","addError","confirmSwitch","window","confirm","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Cursor/Defisite/src/components/WalletConnect.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { InjectedConnector } from '@web3-react/injected-connector';\r\n\r\nconst injected = new InjectedConnector({\r\n  supportedChainIds: [11155111], // Sepolia 테스트넷 Chain ID\r\n});\r\n\r\nfunction WalletConnect() {\r\n  const { activate, deactivate, active, account, chainId, library } = useWeb3React();\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      await activate(injected);\r\n    } catch (error) {\r\n      console.error('Failed to connect wallet:', error);\r\n    }\r\n  };\r\n\r\n  const disconnectWallet = () => {\r\n    try {\r\n      deactivate();\r\n    } catch (error) {\r\n      console.error('Failed to disconnect wallet:', error);\r\n    }\r\n  };\r\n\r\n  const switchToSepolia = async () => {\r\n    if (!library || !library.provider.request) {\r\n      console.error('No provider available');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await library.provider.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId: '0xaa36a7' }], // Sepolia의 chainId (16진수)\r\n      });\r\n    } catch (switchError) {\r\n      // 사용자가 Sepolia 네트워크를 추가하지 않은 경우\r\n      if (switchError.code === 4902) {\r\n        try {\r\n          await library.provider.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [{\r\n              chainId: '0xaa36a7',\r\n              chainName: 'Sepolia Test Network',\r\n              nativeCurrency: {\r\n                name: 'Sepolia Ether',\r\n                symbol: 'SEP',\r\n                decimals: 18\r\n              },\r\n              rpcUrls: ['https://sepolia.infura.io/v3/YOUR-PROJECT-ID'],\r\n              blockExplorerUrls: ['https://sepolia.etherscan.io']\r\n            }],\r\n          });\r\n        } catch (addError) {\r\n          console.error('Failed to add Sepolia network:', addError);\r\n        }\r\n      } else {\r\n        console.error('Failed to switch to Sepolia network:', switchError);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (active && chainId !== 11155111) {\r\n      const confirmSwitch = window.confirm('Please switch to Sepolia Test Network. Click OK to switch.');\r\n      if (confirmSwitch) {\r\n        switchToSepolia();\r\n      }\r\n    }\r\n  }, [active, chainId]);\r\n\r\n  return (\r\n    <div>\r\n      {active ? (\r\n        <div>\r\n          <p>Connected: {account}</p>\r\n          <p>Network: {chainId === 11155111 ? 'Sepolia Test Network' : 'Wrong Network'}</p>\r\n          <button onClick={disconnectWallet}>Disconnect Wallet</button>\r\n          {chainId !== 11155111 && (\r\n            <button onClick={switchToSepolia}>Switch to Sepolia</button>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <button onClick={connectWallet}>Connect MetaMask</button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WalletConnect;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}