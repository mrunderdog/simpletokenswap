{"ast":null,"code":"import React,{useEffect,useCallback,useState}from'react';import{useWeb3React}from'@web3-react/core';import{InjectedConnector}from'@web3-react/injected-connector';import{ethers}from'ethers';import TokenExchange from'./components/TokenExchange';import'./App.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const SEPOLIA_CHAIN_ID=11155111;const injected=new InjectedConnector({supportedChainIds:[SEPOLIA_CHAIN_ID]});function App(){const{active,account,activate,deactivate,chainId,library}=useWeb3React();const[isConnecting,setIsConnecting]=useState(false);useEffect(()=>{if(active&&library){checkAndSwitchNetwork();}},[active,library]);const handleAccountsChanged=useCallback(accounts=>{if(accounts.length>0&&account!==accounts[0]){activate(injected);}else{deactivate();}},[account,activate,deactivate]);useEffect(()=>{const{ethereum}=window;if(ethereum&&ethereum.on){ethereum.on('accountsChanged',handleAccountsChanged);}return()=>{if(ethereum&&ethereum.removeListener){ethereum.removeListener('accountsChanged',handleAccountsChanged);}};},[handleAccountsChanged]);async function connect(){if(isConnecting)return;setIsConnecting(true);try{console.log('Activating injected connector...');await activate(injected,undefined,true);console.log('Injected connector activated');console.log('Waiting for library initialization...');let attempts=0;while(!library&&attempts<100){await new Promise(resolve=>setTimeout(resolve,100));attempts++;}if(!library){throw new Error('Library initialization timeout');}console.log('Library initialized:',library);const provider=new ethers.providers.Web3Provider(library.provider);const network=await provider.getNetwork();console.log('Network:',network);const connectedChainId=network.chainId;console.log('Connected chainId:',connectedChainId);if(connectedChainId!==SEPOLIA_CHAIN_ID){console.log('Switching to Sepolia network...');const switched=await checkAndSwitchNetwork();if(!switched){console.log('Failed to switch to Sepolia');alert(\"This application requires Sepolia network. Please switch to Sepolia and try connecting again.\");await deactivate();}else{console.log('Successfully switched to Sepolia');}}else{console.log('Already on Sepolia network');}}catch(ex){console.error('Failed to connect:',ex);if(ex.code===4001||ex.code===-32002||ex.code===88){alert(\"Connection request was rejected. Please try again and approve the connection request in your wallet.\");}else if(ex.name==='NoEthereumProviderError'){alert(\"No Ethereum wallet detected. Please install a wallet extension or use a dApp browser.\");}else if(ex.name==='UnsupportedChainIdError'){alert(\"You're connected to an unsupported network. Please switch to Sepolia network.\");}else{alert(\"An unknown error occurred. Please check the console for more details.\");}await deactivate();}finally{setIsConnecting(false);}}async function disconnect(){try{deactivate();}catch(ex){console.error('Failed to disconnect:',ex);}}const checkAndSwitchNetwork=async()=>{const{ethereum}=window;if(!ethereum){console.error(\"No Ethereum provider found\");return false;}const provider=new ethers.providers.Web3Provider(ethereum);const network=await provider.getNetwork();if(network.chainId!==SEPOLIA_CHAIN_ID){try{await switchToSepolia();return true;}catch(error){console.error('Failed to switch to Sepolia network:',error);alert(\"Failed to switch to Sepolia network. Please switch manually in your wallet and try again.\");return false;}}return true;};async function switchToSepolia(){const{ethereum}=window;if(!ethereum){throw new Error(\"No Ethereum provider found\");}try{// Sepolia 네트워크로 전환을 시도합니다.\nawait ethereum.request({method:\"wallet_switchEthereumChain\",params:[{chainId:`0x${SEPOLIA_CHAIN_ID.toString(16)}`}]});}catch(switchError){// 네트워크 전환에 실패한 경우, Sepolia 네트워크를 추가합니다.\nif(switchError.code===4902){try{await ethereum.request({method:\"wallet_addEthereumChain\",params:[{chainId:`0x${SEPOLIA_CHAIN_ID.toString(16)}`,chainName:\"Sepolia Test Network\",rpcUrls:[\"https://rpc.sepolia.org\"],nativeCurrency:{name:\"Sepolia Ether\",symbol:\"SEP\",decimals:18},blockExplorerUrls:[\"https://sepolia.etherscan.io\"]}]});// 네트워크 추가 후 다시 전환을 시도합니다.\nawait ethereum.request({method:\"wallet_switchEthereumChain\",params:[{chainId:`0x${SEPOLIA_CHAIN_ID.toString(16)}`}]});}catch(addError){throw new Error('Failed to add Sepolia network');}}else{throw switchError;}}}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"App-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"header-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"placeholder\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"logo-container\",children:/*#__PURE__*/_jsx(\"img\",{src:\"/gpex_logo_whtie_1000px.webp\",alt:\"GPEX Token Exchange\",className:\"logo\",style:{width:'200px',height:'auto'}})}),/*#__PURE__*/_jsx(\"div\",{className:\"wallet-buttons\",children:active?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"button\",{className:\"wallet-address-button\",children:[account.substring(0,4),\"...\",account.substring(account.length-4)]}),/*#__PURE__*/_jsx(\"button\",{onClick:disconnect,className:\"disconnect-button\",children:\"Disconnect\"}),chainId!==SEPOLIA_CHAIN_ID&&/*#__PURE__*/_jsx(\"button\",{onClick:checkAndSwitchNetwork,className:\"switch-network-button\",children:\"Switch to Sepolia\"})]}):/*#__PURE__*/_jsx(\"button\",{onClick:connect,disabled:isConnecting,className:\"connect-wallet-button\",children:isConnecting?'Connecting...':'Connect Wallet'})})]})}),/*#__PURE__*/_jsx(\"main\",{className:\"content-container\",children:/*#__PURE__*/_jsx(TokenExchange,{checkAndSwitchNetwork:checkAndSwitchNetwork})})]});}export default App;","map":{"version":3,"names":["React","useEffect","useCallback","useState","useWeb3React","InjectedConnector","ethers","TokenExchange","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SEPOLIA_CHAIN_ID","injected","supportedChainIds","App","active","account","activate","deactivate","chainId","library","isConnecting","setIsConnecting","checkAndSwitchNetwork","handleAccountsChanged","accounts","length","ethereum","window","on","removeListener","connect","console","log","undefined","attempts","Promise","resolve","setTimeout","Error","provider","providers","Web3Provider","network","getNetwork","connectedChainId","switched","alert","ex","error","code","name","disconnect","switchToSepolia","request","method","params","toString","switchError","chainName","rpcUrls","nativeCurrency","symbol","decimals","blockExplorerUrls","addError","className","children","src","alt","style","width","height","substring","onClick","disabled"],"sources":["C:/Cursor/Defisite/src/App.js"],"sourcesContent":["import React, { useEffect, useCallback, useState } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { InjectedConnector } from '@web3-react/injected-connector';\r\nimport { ethers } from 'ethers';\r\nimport TokenExchange from './components/TokenExchange';\r\nimport './App.css';\r\n\r\nconst SEPOLIA_CHAIN_ID = 11155111;\r\n\r\nconst injected = new InjectedConnector({\r\n  supportedChainIds: [SEPOLIA_CHAIN_ID]\r\n});\r\n\r\nfunction App() {\r\n  const { active, account, activate, deactivate, chainId, library } = useWeb3React();\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (active && library) {\r\n      checkAndSwitchNetwork();\r\n    }\r\n  }, [active, library]);\r\n\r\n  const handleAccountsChanged = useCallback((accounts) => {\r\n    if (accounts.length > 0 && account !== accounts[0]) {\r\n      activate(injected);\r\n    } else {\r\n      deactivate();\r\n    }\r\n  }, [account, activate, deactivate]);\r\n\r\n  useEffect(() => {\r\n    const { ethereum } = window;\r\n    if (ethereum && ethereum.on) {\r\n      ethereum.on('accountsChanged', handleAccountsChanged);\r\n    }\r\n\r\n    return () => {\r\n      if (ethereum && ethereum.removeListener) {\r\n        ethereum.removeListener('accountsChanged', handleAccountsChanged);\r\n      }\r\n    };\r\n  }, [handleAccountsChanged]);\r\n\r\n  async function connect() {\r\n    if (isConnecting) return;\r\n    setIsConnecting(true);\r\n    try {\r\n      console.log('Activating injected connector...');\r\n      await activate(injected, undefined, true);\r\n      console.log('Injected connector activated');\r\n      \r\n      console.log('Waiting for library initialization...');\r\n      let attempts = 0;\r\n      while (!library && attempts < 100) {\r\n        await new Promise(resolve => setTimeout(resolve, 100));\r\n        attempts++;\r\n      }\r\n\r\n      if (!library) {\r\n        throw new Error('Library initialization timeout');\r\n      }\r\n      console.log('Library initialized:', library);\r\n\r\n      const provider = new ethers.providers.Web3Provider(library.provider);\r\n      const network = await provider.getNetwork();\r\n      console.log('Network:', network);\r\n      const connectedChainId = network.chainId;\r\n      console.log('Connected chainId:', connectedChainId);\r\n      \r\n      if (connectedChainId !== SEPOLIA_CHAIN_ID) {\r\n        console.log('Switching to Sepolia network...');\r\n        const switched = await checkAndSwitchNetwork();\r\n        if (!switched) {\r\n          console.log('Failed to switch to Sepolia');\r\n          alert(\"This application requires Sepolia network. Please switch to Sepolia and try connecting again.\");\r\n          await deactivate();\r\n        } else {\r\n          console.log('Successfully switched to Sepolia');\r\n        }\r\n      } else {\r\n        console.log('Already on Sepolia network');\r\n      }\r\n    } catch (ex) {\r\n      console.error('Failed to connect:', ex);\r\n      if (ex.code === 4001 || ex.code === -32002 || ex.code === 88) {\r\n        alert(\"Connection request was rejected. Please try again and approve the connection request in your wallet.\");\r\n      } else if (ex.name === 'NoEthereumProviderError') {\r\n        alert(\"No Ethereum wallet detected. Please install a wallet extension or use a dApp browser.\");\r\n      } else if (ex.name === 'UnsupportedChainIdError') {\r\n        alert(\"You're connected to an unsupported network. Please switch to Sepolia network.\");\r\n      } else {\r\n        alert(\"An unknown error occurred. Please check the console for more details.\");\r\n      }\r\n      await deactivate();\r\n    } finally {\r\n      setIsConnecting(false);\r\n    }\r\n  }\r\n\r\n  async function disconnect() {\r\n    try {\r\n      deactivate();\r\n    } catch (ex) {\r\n      console.error('Failed to disconnect:', ex);\r\n    }\r\n  }\r\n\r\n  const checkAndSwitchNetwork = async () => {\r\n    const { ethereum } = window;\r\n    if (!ethereum) {\r\n      console.error(\"No Ethereum provider found\");\r\n      return false;\r\n    }\r\n\r\n    const provider = new ethers.providers.Web3Provider(ethereum);\r\n    const network = await provider.getNetwork();\r\n    \r\n    if (network.chainId !== SEPOLIA_CHAIN_ID) {\r\n      try {\r\n        await switchToSepolia();\r\n        return true;\r\n      } catch (error) {\r\n        console.error('Failed to switch to Sepolia network:', error);\r\n        alert(\"Failed to switch to Sepolia network. Please switch manually in your wallet and try again.\");\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  async function switchToSepolia() {\r\n    const { ethereum } = window;\r\n    if (!ethereum) {\r\n      throw new Error(\"No Ethereum provider found\");\r\n    }\r\n\r\n    try {\r\n      // Sepolia 네트워크로 전환을 시도합니다.\r\n      await ethereum.request({\r\n        method: \"wallet_switchEthereumChain\",\r\n        params: [{ chainId: `0x${SEPOLIA_CHAIN_ID.toString(16)}` }],\r\n      });\r\n    } catch (switchError) {\r\n      // 네트워크 전환에 실패한 경우, Sepolia 네트워크를 추가합니다.\r\n      if (switchError.code === 4902) {\r\n        try {\r\n          await ethereum.request({\r\n            method: \"wallet_addEthereumChain\",\r\n            params: [\r\n              {\r\n                chainId: `0x${SEPOLIA_CHAIN_ID.toString(16)}`,\r\n                chainName: \"Sepolia Test Network\",\r\n                rpcUrls: [\"https://rpc.sepolia.org\"],\r\n                nativeCurrency: {\r\n                  name: \"Sepolia Ether\",\r\n                  symbol: \"SEP\",\r\n                  decimals: 18\r\n                },\r\n                blockExplorerUrls: [\"https://sepolia.etherscan.io\"]\r\n              }\r\n            ],\r\n          });\r\n          // 네트워크 추가 후 다시 전환을 시도합니다.\r\n          await ethereum.request({\r\n            method: \"wallet_switchEthereumChain\",\r\n            params: [{ chainId: `0x${SEPOLIA_CHAIN_ID.toString(16)}` }],\r\n          });\r\n        } catch (addError) {\r\n          throw new Error('Failed to add Sepolia network');\r\n        }\r\n      } else {\r\n        throw switchError;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"placeholder\"></div>\r\n          <h1 className=\"logo-container\">\r\n            <img \r\n              src=\"/gpex_logo_whtie_1000px.webp\" \r\n              alt=\"GPEX Token Exchange\" \r\n              className=\"logo\" \r\n              style={{\r\n                width: '200px',\r\n                height: 'auto'\r\n              }}\r\n            />\r\n          </h1>\r\n          <div className=\"wallet-buttons\">\r\n            {active ? (\r\n              <>\r\n                <button className=\"wallet-address-button\">\r\n                  {account.substring(0, 4)}...{account.substring(account.length - 4)}\r\n                </button>\r\n                <button onClick={disconnect} className=\"disconnect-button\">\r\n                  Disconnect\r\n                </button>\r\n                {chainId !== SEPOLIA_CHAIN_ID && (\r\n                  <button onClick={checkAndSwitchNetwork} className=\"switch-network-button\">\r\n                    Switch to Sepolia\r\n                  </button>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <button onClick={connect} disabled={isConnecting} className=\"connect-wallet-button\">\r\n                {isConnecting ? 'Connecting...' : 'Connect Wallet'}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <main className=\"content-container\">\r\n        <TokenExchange checkAndSwitchNetwork={checkAndSwitchNetwork} />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}